{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/DirectoryViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectoryViewer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [directoryContent, setDirectoryContent] = useState([]);\n  const [contents, setContents] = useState(null);\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: text => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: newContent => {\n      setDirectoryContent(newContent);\n    }\n  }));\n  useEffect(() => {\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory', 'file', 'file', 'directory', 'file', 'file', 'directory', 'file', 'file', 'directory']\n    };\n    setContents(exampleData);\n    // 백엔드에서 제공받은 데이터를 가공하여 화면에 표시\n    const fetchDirectoryData = async () => {\n      const data = await fetch('/api/directory');\n      setDirectoryContent(data);\n    };\n    fetchDirectoryData();\n  }, []);\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n      console.log(path);\n    } else {\n      console.log(item + ' file clicked');\n    }\n  }\n  if (!contents) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px',\n    textAlign: 'center',\n    flexGrow: '1'\n    // overflowY : 'scroll'\n  };\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const pathBar = {\n    position: 'absolute',\n    /* 절대적 위치 설정 */\n    bottom: 0,\n    /* 바닥에서 0px의 위치 */\n    textAlign: 'left',\n    /* 텍스트 중앙 정렬 */\n    backgroundColor: '#c5e3df9d' /* 배경색 설정 */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: pathBar,\n      children: path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRight: 'black solid 1px'\n      },\n      children: \"sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: contents.files.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: itemStyle,\n        onClick: () => handleItemClick(item, contents.filestype[index]),\n        children: [getIconForType(contents.filestype[index]), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n  // return (\n  //   <div>\n  //     {directoryContent.map((item) => (\n  //       <div key={item.id}>{item.name}</div>\n  //     ))}\n  //   </div>\n  // );\n}, \"rokEasRbHNnYVPbTYP0ghjEQNxU=\")), \"rokEasRbHNnYVPbTYP0ghjEQNxU=\");\n_c2 = DirectoryViewer;\nexport { DirectoryViewer };\nvar _c, _c2;\n$RefreshReg$(_c, \"DirectoryViewer$forwardRef\");\n$RefreshReg$(_c2, \"DirectoryViewer\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useState","useEffect","TerminalInteraction","jsxDEV","_jsxDEV","DirectoryViewer","_s","_c","props","ref","directoryContent","setDirectoryContent","contents","setContents","appendToTerminal","text","updateDirectoryContent","newContent","exampleData","files","filestype","fetchDirectoryData","data","fetch","handleItemClick","item","type","newPath","path","setPath","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","gridStyle","display","gridTemplateColumns","gap","textAlign","flexGrow","itemStyle","cursor","flexDirection","alignItems","pathBar","position","bottom","backgroundColor","style","borderRight","map","index","onClick","getIconForType","_c2","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/DirectoryViewer.jsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\n\n\nconst DirectoryViewer = forwardRef((props, ref) => {\n  const [directoryContent, setDirectoryContent] = useState([]);\n  \n  \n  const [contents, setContents] = useState(null);\n\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: (text) => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: (newContent) => {\n      setDirectoryContent(newContent);\n    }\n  }));\n\n  useEffect(() => {\n\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory','file', 'file', 'directory','file', 'file', 'directory','file', 'file', 'directory']\n    };\n    setContents(exampleData);\n    // 백엔드에서 제공받은 데이터를 가공하여 화면에 표시\n    const fetchDirectoryData = async () => {\n      const data = await fetch('/api/directory');\n      setDirectoryContent(data);\n    };\n    fetchDirectoryData();\n  }, []);\n\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n      console.log(path);\n    } else {\n      console.log(item + ' file clicked');\n    }\n  }\n\n  if (!contents) {\n    return <div>Loading...</div>;\n  }\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px',\n    textAlign: 'center',\n    flexGrow:'1',\n    // overflowY : 'scroll'\n  };\n\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  const pathBar = {\n    position: 'absolute', /* 절대적 위치 설정 */\n            bottom: 0, /* 바닥에서 0px의 위치 */\n            textAlign: 'left', /* 텍스트 중앙 정렬 */\n            backgroundColor: '#c5e3df9d'/* 배경색 설정 */\n  }\n\n  return (\n    <div style={{position: 'relative',display:'flex'}}>\n      <p style={pathBar}>{path}</p>\n      <div style={{borderRight:'black solid 1px'}}>\n        sidebar\n      </div>\n      <div style={gridStyle}>\n        {contents.files.map((item, index) => (\n          <div key={index} style={itemStyle} onClick={() => handleItemClick(item, contents.filestype[index])}>\n            {getIconForType(contents.filestype[index])}\n            <div>{item}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n  // return (\n  //   <div>\n  //     {directoryContent.map((item) => (\n  //       <div key={item.id}>{item.name}</div>\n  //     ))}\n  //   </div>\n  // );\n});\n\nexport  {DirectoryViewer};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}