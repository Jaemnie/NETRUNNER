{"ast":null,"code":"import TerminalInteraction from './TerminalInteraction';\nimport { SocketResult } from './socket';\nfunction Termi(terminal2, elements, socketRoomId) {\n  let message = '';\n  const socket = new SocketResult();\n  socket.joinRoom(socketRoomId);\n  const terminal = terminal2;\n  terminal.open(elements);\n  let currentInput = '';\n  terminal.write('Welcome to NetRunner!\\r\\n');\n  terminal.onKey(({\n    key,\n    domEvent\n  }) => {\n    const char = key;\n    if (domEvent.keyCode === 13) {\n      // Enter key\n      message = currentInput;\n      terminal.writeln('');\n      socket.sendMessage(message);\n      TerminalInteraction.handleTerminalInput(message);\n      socket.getMessage(chat => {\n        terminal.write(chat);\n        terminal.writeln('');\n        chat = '';\n      });\n      currentInput = '';\n    } else if (domEvent.keyCode === 8) {\n      // Backspace 처리\n      if (currentInput.length > 0) {\n        terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n        currentInput = currentInput.slice(0, -1);\n      }\n    } else {\n      currentInput += char;\n      terminal.write(char);\n    }\n  });\n}\n_c = Termi;\nexport { Termi };\nvar _c;\n$RefreshReg$(_c, \"Termi\");","map":{"version":3,"names":["TerminalInteraction","SocketResult","Termi","terminal2","elements","socketRoomId","message","socket","joinRoom","terminal","open","currentInput","write","onKey","key","domEvent","char","keyCode","writeln","sendMessage","handleTerminalInput","getMessage","chat","length","slice","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/termsocket.jsx"],"sourcesContent":["\nimport  TerminalInteraction  from './TerminalInteraction';\nimport { SocketResult } from './socket';\nfunction Termi(terminal2,elements,socketRoomId) {\n    let message = '';\n    const socket = new SocketResult();\n    socket.joinRoom(socketRoomId);\n    const terminal = terminal2;\n    terminal.open(elements);\n    let currentInput = '';\n    terminal.write('Welcome to NetRunner!\\r\\n');\n    terminal.onKey(({ key, domEvent }) => {\n        const char = key;\n        if (domEvent.keyCode === 13) {  // Enter key\n            message = currentInput;\n            terminal.writeln('');\n            socket.sendMessage(message);\n            TerminalInteraction.handleTerminalInput(message);\n            socket.getMessage((chat) => {\n                terminal.write(chat);\n                terminal.writeln('');\n                chat= '';\n            });\n            currentInput = '';\n        } else if (domEvent.keyCode === 8) {\n            // Backspace 처리\n            if (currentInput.length > 0) {\n                terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n                currentInput = currentInput.slice(0, -1);\n            }\n        } else {\n            currentInput += char;\n            terminal.write(char);\n        }\n    });\n}\n\nexport { Termi };\n\n"],"mappings":"AACA,OAAQA,mBAAmB,MAAO,uBAAuB;AACzD,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,KAAKA,CAACC,SAAS,EAACC,QAAQ,EAACC,YAAY,EAAE;EAC5C,IAAIC,OAAO,GAAG,EAAE;EAChB,MAAMC,MAAM,GAAG,IAAIN,YAAY,CAAC,CAAC;EACjCM,MAAM,CAACC,QAAQ,CAACH,YAAY,CAAC;EAC7B,MAAMI,QAAQ,GAAGN,SAAS;EAC1BM,QAAQ,CAACC,IAAI,CAACN,QAAQ,CAAC;EACvB,IAAIO,YAAY,GAAG,EAAE;EACrBF,QAAQ,CAACG,KAAK,CAAC,2BAA2B,CAAC;EAC3CH,QAAQ,CAACI,KAAK,CAAC,CAAC;IAAEC,GAAG;IAAEC;EAAS,CAAC,KAAK;IAClC,MAAMC,IAAI,GAAGF,GAAG;IAChB,IAAIC,QAAQ,CAACE,OAAO,KAAK,EAAE,EAAE;MAAG;MAC5BX,OAAO,GAAGK,YAAY;MACtBF,QAAQ,CAACS,OAAO,CAAC,EAAE,CAAC;MACpBX,MAAM,CAACY,WAAW,CAACb,OAAO,CAAC;MAC3BN,mBAAmB,CAACoB,mBAAmB,CAACd,OAAO,CAAC;MAChDC,MAAM,CAACc,UAAU,CAAEC,IAAI,IAAK;QACxBb,QAAQ,CAACG,KAAK,CAACU,IAAI,CAAC;QACpBb,QAAQ,CAACS,OAAO,CAAC,EAAE,CAAC;QACpBI,IAAI,GAAE,EAAE;MACZ,CAAC,CAAC;MACFX,YAAY,GAAG,EAAE;IACrB,CAAC,MAAM,IAAII,QAAQ,CAACE,OAAO,KAAK,CAAC,EAAE;MAC/B;MACA,IAAIN,YAAY,CAACY,MAAM,GAAG,CAAC,EAAE;QACzBd,QAAQ,CAACG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACzBD,YAAY,GAAGA,YAAY,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5C;IACJ,CAAC,MAAM;MACHb,YAAY,IAAIK,IAAI;MACpBP,QAAQ,CAACG,KAAK,CAACI,IAAI,CAAC;IACxB;EACJ,CAAC,CAAC;AACN;AAACS,EAAA,GAhCQvB,KAAK;AAkCd,SAASA,KAAK;AAAG,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}