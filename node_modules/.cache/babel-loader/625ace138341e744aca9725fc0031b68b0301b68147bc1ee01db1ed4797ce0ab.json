{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jae min\\\\Documents\\\\GitHub\\\\NETRUNNER\\\\src\\\\pages\\\\mainPages\\\\esc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { SVG } from '@svgdotjs/svg.js';\nimport styles from './esc.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  show,\n  onClose\n}) {\n  _s();\n  useEffect(() => {\n    if (!show) return;\n    const slideToggle = document.getElementById(\"slide-toggle-control\");\n    const randomSlideToggle = document.getElementById(\"random-slide-toggle-control\");\n    const delayedSlideToggle = document.getElementById(\"delayed-offset-slide-toggle-control\");\n    const slide = {\n      element: slideToggle,\n      handler: svgSlideEffect,\n      offset: 10,\n      duration: 200,\n      random: false\n    };\n    const randomSlide = {\n      element: randomSlideToggle,\n      handler: svgSlideEffect,\n      offset: 8,\n      duration: 150,\n      random: true\n    };\n    const delayedOffsetSlide = {\n      element: delayedSlideToggle,\n      handler: svgSlideEffect,\n      offset: 50,\n      duration: 50,\n      random: false\n    };\n    new SvgToggleEffect(slide);\n    new SvgToggleEffect(randomSlide);\n    new SvgToggleEffect(delayedOffsetSlide);\n    return () => {\n      slideToggle.removeEventListener(\"change\", () => {});\n      randomSlideToggle.removeEventListener(\"change\", () => {});\n      delayedSlideToggle.removeEventListener(\"change\", () => {});\n    };\n  }, [show]);\n  if (!show) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalOverlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Modal Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a modal dialog.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nclass SvgToggleEffect {\n  constructor(effect) {\n    this.nodes = [...effect.element.nextElementSibling.querySelectorAll(\".row\")];\n    this.nodes.forEach((node, index) => {\n      this.nodes[index] = SVG(node);\n    });\n    if (effect.random) {\n      this.randomizeArray(this.nodes);\n    }\n    effect.element.addEventListener(\"change\", () => {\n      if (effect.element.checked) {\n        effect.handler(this.nodes, false, effect.duration, effect.offset);\n      } else {\n        effect.handler(this.nodes, true, effect.duration, effect.offset);\n      }\n    });\n  }\n  randomizeArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n}\nconst svgSlideEffect = (nodes = [], reverse = false, duration = 100, offset = 10) => {\n  nodes.forEach((node, index) => {\n    setTimeout(() => {\n      if (reverse) {\n        node.animate({\n          duration: duration\n        }).transform({\n          translate: 0\n        });\n      } else {\n        node.animate({\n          duration: duration\n        }).transform({\n          translate: 48\n        });\n      }\n    }, index * offset);\n  });\n};\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","SVG","styles","jsxDEV","_jsxDEV","Modal","show","onClose","_s","slideToggle","document","getElementById","randomSlideToggle","delayedSlideToggle","slide","element","handler","svgSlideEffect","offset","duration","random","randomSlide","delayedOffsetSlide","SvgToggleEffect","removeEventListener","className","modalOverlay","children","modalContent","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","constructor","effect","nodes","nextElementSibling","querySelectorAll","forEach","node","index","randomizeArray","addEventListener","checked","array","i","length","j","Math","floor","reverse","setTimeout","animate","transform","translate","$RefreshReg$"],"sources":["C:/Users/jae min/Documents/GitHub/NETRUNNER/src/pages/mainPages/esc.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { SVG } from '@svgdotjs/svg.js';\r\nimport styles from './esc.module.css';\r\n\r\nfunction Modal({ show, onClose }) {\r\n  useEffect(() => {\r\n    if (!show) return;\r\n\r\n    const slideToggle = document.getElementById(\"slide-toggle-control\");\r\n    const randomSlideToggle = document.getElementById(\"random-slide-toggle-control\");\r\n    const delayedSlideToggle = document.getElementById(\"delayed-offset-slide-toggle-control\");\r\n\r\n    const slide = {\r\n      element: slideToggle,\r\n      handler: svgSlideEffect,\r\n      offset: 10,\r\n      duration: 200,\r\n      random: false,\r\n    };\r\n\r\n    const randomSlide = {\r\n      element: randomSlideToggle,\r\n      handler: svgSlideEffect,\r\n      offset: 8,\r\n      duration: 150,\r\n      random: true,\r\n    };\r\n\r\n    const delayedOffsetSlide = {\r\n      element: delayedSlideToggle,\r\n      handler: svgSlideEffect,\r\n      offset: 50,\r\n      duration: 50,\r\n      random: false,\r\n    };\r\n\r\n    new SvgToggleEffect(slide);\r\n    new SvgToggleEffect(randomSlide);\r\n    new SvgToggleEffect(delayedOffsetSlide);\r\n\r\n    return () => {\r\n      slideToggle.removeEventListener(\"change\", () => {});\r\n      randomSlideToggle.removeEventListener(\"change\", () => {});\r\n      delayedSlideToggle.removeEventListener(\"change\", () => {});\r\n    };\r\n  }, [show]);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.modalOverlay}>\r\n      <div className={styles.modalContent}>\r\n        <h2>Modal Title</h2>\r\n        <p>This is a modal dialog.</p>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass SvgToggleEffect {\r\n  constructor(effect) {\r\n    this.nodes = [\r\n      ...effect.element.nextElementSibling.querySelectorAll(\".row\")\r\n    ];\r\n\r\n    this.nodes.forEach((node, index) => {\r\n      this.nodes[index] = SVG(node);\r\n    });\r\n\r\n    if (effect.random) {\r\n      this.randomizeArray(this.nodes);\r\n    }\r\n\r\n    effect.element.addEventListener(\"change\", () => {\r\n      if (effect.element.checked) {\r\n        effect.handler(this.nodes, false, effect.duration, effect.offset);\r\n      } else {\r\n        effect.handler(this.nodes, true, effect.duration, effect.offset);\r\n      }\r\n    });\r\n  }\r\n\r\n  randomizeArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n}\r\n\r\nconst svgSlideEffect = (nodes = [], reverse = false, duration = 100, offset = 10) => {\r\n  nodes.forEach((node, index) => {\r\n    setTimeout(() => {\r\n      if (reverse) {\r\n        node.animate({ duration: duration }).transform({ translate: 0 });\r\n      } else {\r\n        node.animate({ duration: duration }).transform({ translate: 48 });\r\n      }\r\n    }, index * offset);\r\n  });\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}