{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TermPage from './termPage';\nimport DirectoryViewer from './fileSystem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  const [terminalText, setTerminalText] = useState('');\n  const [guiState, setGUIState] = useState('');\n  const handleGUIEvent = text => {\n    setTerminalText(prevText => `${prevText}\\n${text}`);\n  };\n  const handleTerminalInput = input => {\n    // 특정 텍스트 입력 감지 및 GUI 상태 변경\n    if (input === '/changeGUI') {\n      setGUIState('updated');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DirectoryViewer, {\n      command: guiState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TermPage, {\n      text: terminalText,\n      onTerminalInput: handleTerminalInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MainComponent, \"A5prZ9INYt7N4oW1nS3DEdH0uPQ=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","TermPage","DirectoryViewer","jsxDEV","_jsxDEV","Fragment","_Fragment","MainComponent","_s","terminalText","setTerminalText","guiState","setGUIState","handleGUIEvent","text","prevText","handleTerminalInput","input","children","command","fileName","_jsxFileName","lineNumber","columnNumber","onTerminalInput","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/main.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TermPage from './termPage';\nimport DirectoryViewer from './fileSystem';\n\n\nconst MainComponent = () => {\n  const [terminalText, setTerminalText] = useState('');\n  const [guiState, setGUIState] = useState('');\n\n  const handleGUIEvent = (text) => {\n    setTerminalText((prevText) => `${prevText}\\n${text}`);\n  };\n\n  const handleTerminalInput = (input) => {\n    // 특정 텍스트 입력 감지 및 GUI 상태 변경\n    if (input === '/changeGUI') {\n      setGUIState('updated');\n    }\n  };\n\n  return (\n    <>\n        <DirectoryViewer command={guiState} />\n        <TermPage text={terminalText} onTerminalInput={handleTerminalInput} />\n    </>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,cAAc,GAAIC,IAAI,IAAK;IAC/BJ,eAAe,CAAEK,QAAQ,IAAM,GAAEA,QAAS,KAAID,IAAK,EAAC,CAAC;EACvD,CAAC;EAED,MAAME,mBAAmB,GAAIC,KAAK,IAAK;IACrC;IACA,IAAIA,KAAK,KAAK,YAAY,EAAE;MAC1BL,WAAW,CAAC,SAAS,CAAC;IACxB;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA,CAACF,eAAe;MAACiB,OAAO,EAAER;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCnB,OAAA,CAACH,QAAQ;MAACa,IAAI,EAAEL,YAAa;MAACe,eAAe,EAAER;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACxE,CAAC;AAEP,CAAC;AAACf,EAAA,CArBID,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}