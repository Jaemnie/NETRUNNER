{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AudioContext=/*#__PURE__*/createContext();export const useAudio=()=>useContext(AudioContext);export const AudioProvider=_ref=>{let{children}=_ref;const[isMuted,setIsMuted]=useState(false);const toggleMute=()=>{setIsMuted(prevIsMuted=>!prevIsMuted);};return/*#__PURE__*/_jsx(AudioContext.Provider,{value:{isMuted,toggleMute},children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","AudioContext","useAudio","AudioProvider","_ref","children","isMuted","setIsMuted","toggleMute","prevIsMuted","Provider","value"],"sources":["C:/Users/USER/Documents/GitHub/NETRUNNER/src/pages/mainPages/AudioContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst AudioContext = createContext();\r\n\r\nexport const useAudio = () => useContext(AudioContext);\r\n\r\nexport const AudioProvider = ({ children }) => {\r\n  const [isMuted, setIsMuted] = useState(false);\r\n\r\n  const toggleMute = () => {\r\n    setIsMuted((prevIsMuted) => !prevIsMuted);\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider value={{ isMuted, toggleMute }}>\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAM,QAAQ,CAAGA,CAAA,GAAMJ,UAAU,CAACG,YAAY,CAAC,CAEtD,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAW,UAAU,CAAGA,CAAA,GAAM,CACvBD,UAAU,CAAEE,WAAW,EAAK,CAACA,WAAW,CAAC,CAC3C,CAAC,CAED,mBACET,IAAA,CAACC,YAAY,CAACS,QAAQ,EAACC,KAAK,CAAE,CAAEL,OAAO,CAAEE,UAAW,CAAE,CAAAH,QAAA,CACnDA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}