{"ast":null,"code":"import { SocketResult } from \"./socket\";\nlet terminal = null;\nlet directoryViewer = null;\nconst socketss = new SocketResult();\nexport const TerminalInteraction = {\n  //터미널 객체 설정\n  setTerminal: term => {\n    terminal = term;\n  },\n  //gui페이지 설정\n  setDirectoryViewer: viewer => {\n    directoryViewer = viewer;\n  },\n  //터미널->GUI\n  handleTerminalInput: data => {\n    // 터미널 창에서 입력된 명령어를 DirectoryViewer에 전달\n    directoryViewer.updateDirectoryContent(data);\n  },\n  //GUI->터미널\n  appendToTerminal: text => {\n    // DirectoryViewer에서 전달받은 텍스트를 터미널 창에 입력\n    terminal.write(text);\n    terminal.write('\\r\\n');\n    socketss.sendMessage(text);\n    socketss.getMessage(char => {\n      console.log(char);\n    });\n    socketss.sendMessage('pwd');\n    socketss.sendMessage(\"ls -al\");\n    socketss.getMessage(chat => {\n      const temp1 = chat;\n      const temp2 = chat;\n      const regex1 = /[^[\\]]+(?=\\[)/g;\n      const regex2 = /(?<=\\[).*?(?=\\])/g;\n      const files = temp1.match(regex1);\n      const filestype = temp2.match(regex2);\n      const setDir = {\n        files,\n        filestype\n      };\n      console.log(setDir);\n      directoryViewer.contents = setDir;\n    });\n  }\n};","map":{"version":3,"names":["SocketResult","terminal","directoryViewer","socketss","TerminalInteraction","setTerminal","term","setDirectoryViewer","viewer","handleTerminalInput","data","updateDirectoryContent","appendToTerminal","text","write","sendMessage","getMessage","char","console","log","chat","temp1","temp2","regex1","regex2","files","match","filestype","setDir","contents"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/TerminalInteraction.jsx"],"sourcesContent":["\nimport {SocketResult} from \"./socket\";\n\nlet terminal = null;\nlet directoryViewer = null;\nconst socketss = new SocketResult();\n\nexport const TerminalInteraction = {\n  //터미널 객체 설정\n  setTerminal: (term) => {\n    terminal = term;\n  },\n\n  //gui페이지 설정\n  setDirectoryViewer: (viewer) => {\n    directoryViewer = viewer;\n  },\n\n  //터미널->GUI\n  handleTerminalInput: (data) => {\n    // 터미널 창에서 입력된 명령어를 DirectoryViewer에 전달\n      directoryViewer.updateDirectoryContent(data);\n  },\n\n  //GUI->터미널\n  appendToTerminal: (text) => {\n    \n    // DirectoryViewer에서 전달받은 텍스트를 터미널 창에 입력\n    terminal.write(text);\n    terminal.write('\\r\\n');\n    socketss.sendMessage(text);\n    socketss.getMessage((char)=>{\n      console.log(char);\n    });\n    socketss.sendMessage('pwd');\n    socketss.sendMessage(\"ls -al\");\n    socketss.getMessage((chat) => {\n      const temp1 = chat;\n      const temp2 = chat;\n      const regex1 = /[^[\\]]+(?=\\[)/g;\n      const regex2 = /(?<=\\[).*?(?=\\])/g;\n      const files = temp1.match(regex1); \n      const filestype = temp2.match(regex2);\n      const setDir = {files,filestype};\n      console.log(setDir);\n      directoryViewer.contents = setDir;\n    });\n  }\n  \n};\n"],"mappings":"AACA,SAAQA,YAAY,QAAO,UAAU;AAErC,IAAIC,QAAQ,GAAG,IAAI;AACnB,IAAIC,eAAe,GAAG,IAAI;AAC1B,MAAMC,QAAQ,GAAG,IAAIH,YAAY,CAAC,CAAC;AAEnC,OAAO,MAAMI,mBAAmB,GAAG;EACjC;EACAC,WAAW,EAAGC,IAAI,IAAK;IACrBL,QAAQ,GAAGK,IAAI;EACjB,CAAC;EAED;EACAC,kBAAkB,EAAGC,MAAM,IAAK;IAC9BN,eAAe,GAAGM,MAAM;EAC1B,CAAC;EAED;EACAC,mBAAmB,EAAGC,IAAI,IAAK;IAC7B;IACER,eAAe,CAACS,sBAAsB,CAACD,IAAI,CAAC;EAChD,CAAC;EAED;EACAE,gBAAgB,EAAGC,IAAI,IAAK;IAE1B;IACAZ,QAAQ,CAACa,KAAK,CAACD,IAAI,CAAC;IACpBZ,QAAQ,CAACa,KAAK,CAAC,MAAM,CAAC;IACtBX,QAAQ,CAACY,WAAW,CAACF,IAAI,CAAC;IAC1BV,QAAQ,CAACa,UAAU,CAAEC,IAAI,IAAG;MAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;IACFd,QAAQ,CAACY,WAAW,CAAC,KAAK,CAAC;IAC3BZ,QAAQ,CAACY,WAAW,CAAC,QAAQ,CAAC;IAC9BZ,QAAQ,CAACa,UAAU,CAAEI,IAAI,IAAK;MAC5B,MAAMC,KAAK,GAAGD,IAAI;MAClB,MAAME,KAAK,GAAGF,IAAI;MAClB,MAAMG,MAAM,GAAG,gBAAgB;MAC/B,MAAMC,MAAM,GAAG,mBAAmB;MAClC,MAAMC,KAAK,GAAGJ,KAAK,CAACK,KAAK,CAACH,MAAM,CAAC;MACjC,MAAMI,SAAS,GAAGL,KAAK,CAACI,KAAK,CAACF,MAAM,CAAC;MACrC,MAAMI,MAAM,GAAG;QAACH,KAAK;QAACE;MAAS,CAAC;MAChCT,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;MACnB1B,eAAe,CAAC2B,QAAQ,GAAGD,MAAM;IACnC,CAAC,CAAC;EACJ;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}