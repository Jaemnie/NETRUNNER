{"ast":null,"code":"import { SocketResult } from \"./socket\";\nlet terminal = null;\nlet directoryViewer = null;\nconst sockets = new SocketResult();\nexport const TerminalInteraction = {\n  //터미널 객체 설정\n  setTerminal: term => {\n    terminal = term;\n  },\n  //gui페이지 설정\n  setDirectoryViewer: viewer => {\n    directoryViewer = viewer;\n  },\n  //터미널->GUI\n  handleTerminalInput: data => {\n    // 터미널 창에서 입력된 명령어를 DirectoryViewer에 전달\n    const co = data.split(' ');\n    if (co[0] === 'cd') {\n      sockets.sendMessage(data);\n      sockets.getMessage(data => {\n        directoryViewer.updateDirectoryContent(data);\n      });\n    }\n  },\n  //GUI->터미널\n  appendToTerminal: text => {\n    // DirectoryViewer에서 전달받은 텍스트를 터미널 창에 입력\n    terminal.write(text);\n    terminal.write('\\r\\n');\n    console.log(text);\n    sockets.sendMessage(text);\n    sockets.getMessage(text => {\n      const temp1 = text;\n      const temp2 = text;\n      const regex = /\\[(.*?)\\]/g;\n      const files = temp1.replace(regex, '$1').split(' ');\n      const regex2 = /\\[(directory|file)\\]/g;\n      const result = temp2.match(regex2);\n      const regex3 = /\\[(.*?)\\]/g;\n      const filestype = result.map(item => item.replace(regex3, '$1'));\n      const setDir = {\n        files,\n        filestype\n      };\n      console.log(\"gui->term:\", setDir);\n      directoryViewer.setContents(setDir);\n    });\n  }\n};","map":{"version":3,"names":["SocketResult","terminal","directoryViewer","sockets","TerminalInteraction","setTerminal","term","setDirectoryViewer","viewer","handleTerminalInput","data","co","split","sendMessage","getMessage","updateDirectoryContent","appendToTerminal","text","write","console","log","temp1","temp2","regex","files","replace","regex2","result","match","regex3","filestype","map","item","setDir","setContents"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/TerminalInteraction.jsx"],"sourcesContent":["import {SocketResult} from \"./socket\";\n\nlet terminal = null;\nlet directoryViewer = null;\nconst sockets = new SocketResult();\nexport const TerminalInteraction = {\n  //터미널 객체 설정\n  setTerminal: (term) => {\n    terminal = term;\n  },\n\n  //gui페이지 설정\n  setDirectoryViewer: (viewer) => {\n    directoryViewer = viewer;\n  },\n\n  //터미널->GUI\n  handleTerminalInput: (data) => {\n    // 터미널 창에서 입력된 명령어를 DirectoryViewer에 전달\n    const co = data.split(' ');\n    if(co[0]==='cd'){\n    sockets.sendMessage(data);\n    sockets.getMessage((data) => {\n      directoryViewer.updateDirectoryContent(data);\n    });\n  }\n  },\n\n  //GUI->터미널\n  appendToTerminal: (text) => {\n    // DirectoryViewer에서 전달받은 텍스트를 터미널 창에 입력\n    terminal.write(text);\n    terminal.write('\\r\\n');\n    console.log(text);\n    sockets.sendMessage(text);\n    sockets.getMessage((text) => {\n      const temp1 = text;\n      const temp2 = text;\n      const regex = /\\[(.*?)\\]/g;\n      const files = temp1.replace(regex, '$1').split(' ');\n      const regex2 = /\\[(directory|file)\\]/g;\n      const result =  temp2.match(regex2);\n      const regex3 = /\\[(.*?)\\]/g;\n      const filestype = result.map(item => item.replace(regex3, '$1'));\n      const setDir = {files,filestype};\n      console.log(\"gui->term:\",setDir);\n      directoryViewer.setContents(setDir);\n    });\n  }\n};\n"],"mappings":"AAAA,SAAQA,YAAY,QAAO,UAAU;AAErC,IAAIC,QAAQ,GAAG,IAAI;AACnB,IAAIC,eAAe,GAAG,IAAI;AAC1B,MAAMC,OAAO,GAAG,IAAIH,YAAY,CAAC,CAAC;AAClC,OAAO,MAAMI,mBAAmB,GAAG;EACjC;EACAC,WAAW,EAAGC,IAAI,IAAK;IACrBL,QAAQ,GAAGK,IAAI;EACjB,CAAC;EAED;EACAC,kBAAkB,EAAGC,MAAM,IAAK;IAC9BN,eAAe,GAAGM,MAAM;EAC1B,CAAC;EAED;EACAC,mBAAmB,EAAGC,IAAI,IAAK;IAC7B;IACA,MAAMC,EAAE,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1B,IAAGD,EAAE,CAAC,CAAC,CAAC,KAAG,IAAI,EAAC;MAChBR,OAAO,CAACU,WAAW,CAACH,IAAI,CAAC;MACzBP,OAAO,CAACW,UAAU,CAAEJ,IAAI,IAAK;QAC3BR,eAAe,CAACa,sBAAsB,CAACL,IAAI,CAAC;MAC9C,CAAC,CAAC;IACJ;EACA,CAAC;EAED;EACAM,gBAAgB,EAAGC,IAAI,IAAK;IAC1B;IACAhB,QAAQ,CAACiB,KAAK,CAACD,IAAI,CAAC;IACpBhB,QAAQ,CAACiB,KAAK,CAAC,MAAM,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBd,OAAO,CAACU,WAAW,CAACI,IAAI,CAAC;IACzBd,OAAO,CAACW,UAAU,CAAEG,IAAI,IAAK;MAC3B,MAAMI,KAAK,GAAGJ,IAAI;MAClB,MAAMK,KAAK,GAAGL,IAAI;MAClB,MAAMM,KAAK,GAAG,YAAY;MAC1B,MAAMC,KAAK,GAAGH,KAAK,CAACI,OAAO,CAACF,KAAK,EAAE,IAAI,CAAC,CAACX,KAAK,CAAC,GAAG,CAAC;MACnD,MAAMc,MAAM,GAAG,uBAAuB;MACtC,MAAMC,MAAM,GAAIL,KAAK,CAACM,KAAK,CAACF,MAAM,CAAC;MACnC,MAAMG,MAAM,GAAG,YAAY;MAC3B,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACP,OAAO,CAACI,MAAM,EAAE,IAAI,CAAC,CAAC;MAChE,MAAMI,MAAM,GAAG;QAACT,KAAK;QAACM;MAAS,CAAC;MAChCX,OAAO,CAACC,GAAG,CAAC,YAAY,EAACa,MAAM,CAAC;MAChC/B,eAAe,CAACgC,WAAW,CAACD,MAAM,CAAC;IACrC,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}