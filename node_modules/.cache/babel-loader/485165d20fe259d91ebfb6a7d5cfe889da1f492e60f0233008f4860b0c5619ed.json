{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFolder,\n        size: \"5x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this);\n    case 'file':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"5x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"5x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n  }\n}\nconst DirectoryViewer = ({\n  initialPath\n}) => {\n  _s();\n  const [path, setPath] = useState(initialPath);\n  const [contents, setContents] = useState(null);\n  useEffect(() => {\n    // 백엔드 연동 로직은 여기에 구현\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory']\n    };\n    setContents(exampleData);\n  }, [path]);\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n    } else {\n      console.log(item + ' file clicked');\n    }\n  }\n  if (!contents) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 스타일 정의\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n    gap: '20px',\n    textAlign: 'center'\n  };\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gridStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), contents.files.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: itemStyle,\n      onClick: () => handleItemClick(item, contents.filestype[index]),\n      children: [getIconForType(contents.filestype[index]), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DirectoryViewer, \"ssR5dTsbFJOVu6xJEJcuIH7bbNM=\");\n_c = DirectoryViewer;\nexport default DirectoryViewer;\nvar _c;\n$RefreshReg$(_c, \"DirectoryViewer\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faFolder","faFile","jsxDEV","_jsxDEV","getIconForType","type","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","DirectoryViewer","initialPath","_s","path","setPath","contents","setContents","exampleData","files","filestype","handleItemClick","item","newPath","console","log","children","gridStyle","display","gridTemplateColumns","gap","textAlign","itemStyle","cursor","flexDirection","alignItems","style","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\n\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return <FontAwesomeIcon icon={faFolder} size=\"5x\" />;\n    case 'file':\n      return <FontAwesomeIcon icon={faFile} size=\"5x\" />;\n    default:\n      return <FontAwesomeIcon icon={faFile} size=\"5x\" />;\n  }\n}\n\nconst DirectoryViewer = ({ initialPath }) => {\n  const [path, setPath] = useState(initialPath);\n  const [contents, setContents] = useState(null);\n\n  useEffect(() => {\n    // 백엔드 연동 로직은 여기에 구현\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory']\n    };\n    setContents(exampleData);\n  }, [path]);\n\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n    } else {\n      console.log(item + ' file clicked');\n    }\n  }\n\n  if (!contents) {\n    return <div>Loading...</div>;\n  }\n\n  // 스타일 정의\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n    gap: '20px',\n    textAlign: 'center',\n  };\n\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  return (\n    <div style={gridStyle}>\n      <div>\n    </div>\n      {contents.files.map((item, index) => (\n        <div key={index} style={itemStyle} onClick={() => handleItemClick(item, contents.filestype[index])}>\n          {getIconForType(contents.filestype[index])}\n          <div>{item}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DirectoryViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}