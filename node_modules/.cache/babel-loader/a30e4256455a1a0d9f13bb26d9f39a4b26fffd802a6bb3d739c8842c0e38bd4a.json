{"ast":null,"code":"import TerminalInteraction from'./TerminalInteraction';import{SocketResult}from'./socket';function Termi(terminal2,elements,socketRoomId){let message='';const socket=new SocketResult();socket.joinRoom(socketRoomId);const terminal=terminal2;terminal.open(elements);let currentInput='';terminal.write('Welcome to NetRunner!\\r\\n');terminal.onKey(_ref=>{let{key,domEvent}=_ref;const char=key;if(domEvent.keyCode===13){// Enter key\nmessage=currentInput;terminal.writeln('');socket.sendMessage(message);TerminalInteraction.handleTerminalInput(message);socket.getMessage(chat=>{terminal.write(chat);terminal.writeln('');chat='';});currentInput='';}else if(domEvent.keyCode===8){// Backspace 처리\nif(currentInput.length>0){terminal.write('\\b \\b');// 터미널에서 문자를 제거\ncurrentInput=currentInput.slice(0,-1);}}else{currentInput+=char;terminal.write(char);}});}export{Termi};","map":{"version":3,"names":["TerminalInteraction","SocketResult","Termi","terminal2","elements","socketRoomId","message","socket","joinRoom","terminal","open","currentInput","write","onKey","_ref","key","domEvent","char","keyCode","writeln","sendMessage","handleTerminalInput","getMessage","chat","length","slice"],"sources":["C:/Users/USER/Documents/GitHub/NETRUNNER/src/components/termsocket.jsx"],"sourcesContent":["\r\nimport  TerminalInteraction  from './TerminalInteraction';\r\nimport { SocketResult } from './socket';\r\nfunction Termi(terminal2,elements,socketRoomId) {\r\n    let message = '';\r\n    const socket = new SocketResult();\r\n    socket.joinRoom(socketRoomId);\r\n    const terminal = terminal2;\r\n    terminal.open(elements);\r\n    let currentInput = '';\r\n    terminal.write('Welcome to NetRunner!\\r\\n');\r\n    terminal.onKey(({ key, domEvent }) => {\r\n        const char = key;\r\n        if (domEvent.keyCode === 13) {  // Enter key\r\n            message = currentInput;\r\n            terminal.writeln('');\r\n            socket.sendMessage(message);\r\n            TerminalInteraction.handleTerminalInput(message);\r\n            socket.getMessage((chat) => {\r\n                terminal.write(chat);\r\n                terminal.writeln('');\r\n                chat= '';\r\n            });\r\n            currentInput = '';\r\n        } else if (domEvent.keyCode === 8) {\r\n            // Backspace 처리\r\n            if (currentInput.length > 0) {\r\n                terminal.write('\\b \\b'); // 터미널에서 문자를 제거\r\n                currentInput = currentInput.slice(0, -1);\r\n            }\r\n        } else {\r\n            currentInput += char;\r\n            terminal.write(char);\r\n        }\r\n    });\r\n}\r\n\r\nexport { Termi };\r\n\r\n"],"mappings":"AACA,MAAQ,CAAAA,mBAAmB,KAAO,uBAAuB,CACzD,OAASC,YAAY,KAAQ,UAAU,CACvC,QAAS,CAAAC,KAAKA,CAACC,SAAS,CAACC,QAAQ,CAACC,YAAY,CAAE,CAC5C,GAAI,CAAAC,OAAO,CAAG,EAAE,CAChB,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAN,YAAY,CAAC,CAAC,CACjCM,MAAM,CAACC,QAAQ,CAACH,YAAY,CAAC,CAC7B,KAAM,CAAAI,QAAQ,CAAGN,SAAS,CAC1BM,QAAQ,CAACC,IAAI,CAACN,QAAQ,CAAC,CACvB,GAAI,CAAAO,YAAY,CAAG,EAAE,CACrBF,QAAQ,CAACG,KAAK,CAAC,2BAA2B,CAAC,CAC3CH,QAAQ,CAACI,KAAK,CAACC,IAAA,EAAuB,IAAtB,CAAEC,GAAG,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC7B,KAAM,CAAAG,IAAI,CAAGF,GAAG,CAChB,GAAIC,QAAQ,CAACE,OAAO,GAAK,EAAE,CAAE,CAAG;AAC5BZ,OAAO,CAAGK,YAAY,CACtBF,QAAQ,CAACU,OAAO,CAAC,EAAE,CAAC,CACpBZ,MAAM,CAACa,WAAW,CAACd,OAAO,CAAC,CAC3BN,mBAAmB,CAACqB,mBAAmB,CAACf,OAAO,CAAC,CAChDC,MAAM,CAACe,UAAU,CAAEC,IAAI,EAAK,CACxBd,QAAQ,CAACG,KAAK,CAACW,IAAI,CAAC,CACpBd,QAAQ,CAACU,OAAO,CAAC,EAAE,CAAC,CACpBI,IAAI,CAAE,EAAE,CACZ,CAAC,CAAC,CACFZ,YAAY,CAAG,EAAE,CACrB,CAAC,IAAM,IAAIK,QAAQ,CAACE,OAAO,GAAK,CAAC,CAAE,CAC/B;AACA,GAAIP,YAAY,CAACa,MAAM,CAAG,CAAC,CAAE,CACzBf,QAAQ,CAACG,KAAK,CAAC,OAAO,CAAC,CAAE;AACzBD,YAAY,CAAGA,YAAY,CAACc,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC5C,CACJ,CAAC,IAAM,CACHd,YAAY,EAAIM,IAAI,CACpBR,QAAQ,CAACG,KAAK,CAACK,IAAI,CAAC,CACxB,CACJ,CAAC,CAAC,CACN,CAEA,OAASf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}