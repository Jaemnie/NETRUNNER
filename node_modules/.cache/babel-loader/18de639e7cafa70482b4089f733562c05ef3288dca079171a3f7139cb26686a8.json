{"ast":null,"code":"import io from'socket.io-client';class SocketResult{constructor(){// Token은 인스턴스가 생성될 때 한 번만 설정되어야 합니다.\nconst token=localStorage.getItem('accessToken');// this.socket을 사용해 클래스 내 다른 메소드에서도 소켓에 접근할 수 있습니다.\nthis.socket=io('http://netrunner.life:4000/term',{query:{token}});// NestJS 서버 주소\n// 메시지 리스너를 여기서 한번만 등록합니다.\nthis.socket.on('message',payload=>{if(this.onMessageReceived){this.onMessageReceived(payload);}});}// 메시지를 받는 메소드\ngetMessage(callback){// callback 함수를 이용해 외부에서 메시지 처리를 할 수 있도록 합니다.\nthis.onMessageReceived=callback;}// 메시지를 보내는 메소드\nsendMessage(message){this.socket.emit('message',message);}}export{SocketResult};","map":{"version":3,"names":["io","SocketResult","constructor","token","localStorage","getItem","socket","query","on","payload","onMessageReceived","getMessage","callback","sendMessage","message","emit"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/socket.jsx"],"sourcesContent":["import io from 'socket.io-client';\n\nclass SocketResult {\n    constructor() {\n        // Token은 인스턴스가 생성될 때 한 번만 설정되어야 합니다.\n        const token = localStorage.getItem('accessToken');\n        // this.socket을 사용해 클래스 내 다른 메소드에서도 소켓에 접근할 수 있습니다.\n        this.socket = io('http://netrunner.life:4000/term', {\n            query: { token }\n        }); // NestJS 서버 주소\n\n        // 메시지 리스너를 여기서 한번만 등록합니다.\n        this.socket.on('message', (payload) => {\n            if(this.onMessageReceived) {\n                this.onMessageReceived(payload);\n            }\n        });\n    }\n\n    // 메시지를 받는 메소드\n    getMessage(callback) {\n        // callback 함수를 이용해 외부에서 메시지 처리를 할 수 있도록 합니다.\n        this.onMessageReceived = callback;\n    }\n\n    // 메시지를 보내는 메소드\n    sendMessage(message) {\n        this.socket.emit('message', message);\n    }\n}\n\nexport { SocketResult };\n"],"mappings":"AAAA,MAAO,CAAAA,EAAE,KAAM,kBAAkB,CAEjC,KAAM,CAAAC,YAAa,CACfC,WAAWA,CAAA,CAAG,CACV;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACjD;AACA,IAAI,CAACC,MAAM,CAAGN,EAAE,CAAC,iCAAiC,CAAE,CAChDO,KAAK,CAAE,CAAEJ,KAAM,CACnB,CAAC,CAAC,CAAE;AAEJ;AACA,IAAI,CAACG,MAAM,CAACE,EAAE,CAAC,SAAS,CAAGC,OAAO,EAAK,CACnC,GAAG,IAAI,CAACC,iBAAiB,CAAE,CACvB,IAAI,CAACA,iBAAiB,CAACD,OAAO,CAAC,CACnC,CACJ,CAAC,CAAC,CACN,CAEA;AACAE,UAAUA,CAACC,QAAQ,CAAE,CACjB;AACA,IAAI,CAACF,iBAAiB,CAAGE,QAAQ,CACrC,CAEA;AACAC,WAAWA,CAACC,OAAO,CAAE,CACjB,IAAI,CAACR,MAAM,CAACS,IAAI,CAAC,SAAS,CAAED,OAAO,CAAC,CACxC,CACJ,CAEA,OAASb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}