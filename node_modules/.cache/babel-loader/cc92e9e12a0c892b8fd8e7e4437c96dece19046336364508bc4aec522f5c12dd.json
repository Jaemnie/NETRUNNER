{"ast":null,"code":"import{SocketResult}from\"./socket\";import{TerminalInteraction}from'./TerminalInteraction';function Termi(terminal2,elements){let message='';const sockets=new SocketResult();const terminal=terminal2;terminal.open(elements);let currentInput='';terminal.write('Welcome to NetRunner!\\r\\n');terminal.onKey(_ref=>{let{key,domEvent}=_ref;const char=key;if(domEvent.keyCode===13){// Enter key\nmessage=currentInput;terminal.writeln('');sockets.sendMessage(message);TerminalInteraction.handleTerminalInput(message);sockets.getMessage(chat=>{terminal.write(chat);terminal.writeln('');chat='';});currentInput='';}else if(domEvent.keyCode===8){// Backspace 처리\nif(currentInput.length>0){terminal.write('\\b \\b');// 터미널에서 문자를 제거\ncurrentInput=currentInput.slice(0,-1);}}else{currentInput+=char;terminal.write(char);}});}export{Termi};","map":{"version":3,"names":["SocketResult","TerminalInteraction","Termi","terminal2","elements","message","sockets","terminal","open","currentInput","write","onKey","_ref","key","domEvent","char","keyCode","writeln","sendMessage","handleTerminalInput","getMessage","chat","length","slice"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/termsocket.jsx"],"sourcesContent":["\nimport {SocketResult} from \"./socket\";\nimport { TerminalInteraction } from './TerminalInteraction';\n\nfunction Termi(terminal2,elements) {\n    let message = '';\n    const sockets = new SocketResult();\n    const terminal = terminal2;\n    terminal.open(elements);\n    let currentInput = '';\n    terminal.write('Welcome to NetRunner!\\r\\n');\n    terminal.onKey(({ key, domEvent }) => {\n        const char = key;\n        if (domEvent.keyCode === 13) {  // Enter key\n            message = currentInput;\n            terminal.writeln('');\n            sockets.sendMessage(message);\n            TerminalInteraction.handleTerminalInput(message);\n            sockets.getMessage((chat) => {\n                terminal.write(chat);\n                terminal.writeln('');\n                chat= '';\n            });\n            currentInput = '';\n        } else if (domEvent.keyCode === 8) {\n            // Backspace 처리\n            if (currentInput.length > 0) {\n                terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n                currentInput = currentInput.slice(0, -1);\n            }\n        } else {\n            currentInput += char;\n            terminal.write(char);\n        }\n    });\n}\n\nexport { Termi };\n\n"],"mappings":"AACA,OAAQA,YAAY,KAAO,UAAU,CACrC,OAASC,mBAAmB,KAAQ,uBAAuB,CAE3D,QAAS,CAAAC,KAAKA,CAACC,SAAS,CAACC,QAAQ,CAAE,CAC/B,GAAI,CAAAC,OAAO,CAAG,EAAE,CAChB,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAN,YAAY,CAAC,CAAC,CAClC,KAAM,CAAAO,QAAQ,CAAGJ,SAAS,CAC1BI,QAAQ,CAACC,IAAI,CAACJ,QAAQ,CAAC,CACvB,GAAI,CAAAK,YAAY,CAAG,EAAE,CACrBF,QAAQ,CAACG,KAAK,CAAC,2BAA2B,CAAC,CAC3CH,QAAQ,CAACI,KAAK,CAACC,IAAA,EAAuB,IAAtB,CAAEC,GAAG,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC7B,KAAM,CAAAG,IAAI,CAAGF,GAAG,CAChB,GAAIC,QAAQ,CAACE,OAAO,GAAK,EAAE,CAAE,CAAG;AAC5BX,OAAO,CAAGI,YAAY,CACtBF,QAAQ,CAACU,OAAO,CAAC,EAAE,CAAC,CACpBX,OAAO,CAACY,WAAW,CAACb,OAAO,CAAC,CAC5BJ,mBAAmB,CAACkB,mBAAmB,CAACd,OAAO,CAAC,CAChDC,OAAO,CAACc,UAAU,CAAEC,IAAI,EAAK,CACzBd,QAAQ,CAACG,KAAK,CAACW,IAAI,CAAC,CACpBd,QAAQ,CAACU,OAAO,CAAC,EAAE,CAAC,CACpBI,IAAI,CAAE,EAAE,CACZ,CAAC,CAAC,CACFZ,YAAY,CAAG,EAAE,CACrB,CAAC,IAAM,IAAIK,QAAQ,CAACE,OAAO,GAAK,CAAC,CAAE,CAC/B;AACA,GAAIP,YAAY,CAACa,MAAM,CAAG,CAAC,CAAE,CACzBf,QAAQ,CAACG,KAAK,CAAC,OAAO,CAAC,CAAE;AACzBD,YAAY,CAAGA,YAAY,CAACc,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC5C,CACJ,CAAC,IAAM,CACHd,YAAY,EAAIM,IAAI,CACpBR,QAAQ,CAACG,KAAK,CAACK,IAAI,CAAC,CACxB,CACJ,CAAC,CAAC,CACN,CAEA,OAASb,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}