{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile, faD } from '@fortawesome/free-solid-svg-icons';\nimport { SocketResult } from \"./socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFolder,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    case 'file':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n  }\n}\nconst DirectoryViewer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref, initialPath) => {\n  _s();\n  const [path, setPath] = useState(initialPath);\n  const [contents, setContents] = useState(null);\n  const sockets = new SocketResult();\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: text => {\n      TerminalInteraction.appendToTerminal(text);\n      sockets.sendMessage(text);\n      sockets.getMessage(chat => {\n        const temp1 = chat;\n        const temp2 = chat;\n        const regex = /\\[(.*?)\\]/g;\n        const files = temp1.replace(regex, '$1').split(' ');\n        const regex2 = /\\[(directory|file)\\]/g;\n        const result = temp2.match(regex2);\n        const regex3 = /\\[(.*?)\\]/g;\n        const filestype = result.map(item => item.replace(regex3, '$1'));\n        const setDir = {\n          files,\n          filestype\n        };\n        setContents(setDir);\n      });\n    },\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: newContent => {\n      const temp = newContent.split(' ');\n      console.log(temp);\n      if (temp[0] == 'cd') {\n        const temp1 = temp;\n        const temp2 = temp;\n        const regex = /\\[(.*?)\\]/g;\n        const files = temp1.replace(regex, '$1').split(' ');\n        const regex2 = /\\[(directory|file)\\]/g;\n        const result = temp2.match(regex2);\n        const regex3 = /\\[(.*?)\\]/g;\n        const filestype = result.map(item => item.replace(regex3, '$1'));\n        const setDir = {\n          files,\n          filestype\n        };\n        setContents(setDir);\n      }\n    }\n  }));\n  useEffect(() => {\n    const fetchDirectoryData = async () => {\n      let fdata = null;\n      await fetch('http://172.16.230.134:4000/filesystem/1', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      }).then(response => response.json()).then(data => {\n        const files = data.files;\n        const filestype = data.filestype;\n        fdata = {\n          files,\n          filestype\n        };\n      }).catch(error => console.error('초기화 에러:', error));\n      console.log(\"data:\", fdata);\n      setContents(fdata);\n    };\n    fetchDirectoryData();\n  }, []);\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n      ref.current.appendToTerminal(`cd ${item}`);\n    } else {\n      ref.current.appendToTerminal(`cat ${item}`);\n    }\n  }\n  if (!contents) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px',\n    textAlign: 'center',\n    flexGrow: '1'\n    // overflowY : 'scroll'\n  };\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const pathBar = {\n    position: 'absolute',\n    /* 절대적 위치 설정 */\n    bottom: 0,\n    /* 바닥에서 0px의 위치 */\n    textAlign: 'left',\n    /* 텍스트 중앙 정렬 */\n    backgroundColor: '#c5e3df9d' /* 배경색 설정 */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: pathBar,\n      children: path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRight: 'black solid 1px'\n      },\n      children: \"sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: contents.files.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: itemStyle,\n        onClick: () => handleItemClick(item, contents.filestype[index]),\n        children: [getIconForType(contents.filestype[index]), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}, \"I1F5j6YsIUO4EyhSsCKZkE/wmj0=\")), \"I1F5j6YsIUO4EyhSsCKZkE/wmj0=\");\n_c2 = DirectoryViewer;\nexport { DirectoryViewer };\nvar _c, _c2;\n$RefreshReg$(_c, \"DirectoryViewer$forwardRef\");\n$RefreshReg$(_c2, \"DirectoryViewer\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useState","useEffect","TerminalInteraction","FontAwesomeIcon","faFolder","faFile","faD","SocketResult","jsxDEV","_jsxDEV","getIconForType","type","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","DirectoryViewer","_s","_c","props","ref","initialPath","path","setPath","contents","setContents","sockets","appendToTerminal","text","sendMessage","getMessage","chat","temp1","temp2","regex","files","replace","split","regex2","result","match","regex3","filestype","map","item","setDir","updateDirectoryContent","newContent","temp","console","log","fetchDirectoryData","fdata","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","error","handleItemClick","newPath","current","children","gridStyle","display","gridTemplateColumns","gap","textAlign","flexGrow","itemStyle","cursor","flexDirection","alignItems","pathBar","position","bottom","backgroundColor","style","borderRight","index","onClick","_c2","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile, faD } from '@fortawesome/free-solid-svg-icons';\nimport {SocketResult} from \"./socket\";\n\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return <FontAwesomeIcon icon={faFolder} size=\"4x\" />;\n    case 'file':\n      return <FontAwesomeIcon icon={faFile} size=\"4x\" />;\n    default:\n      return <FontAwesomeIcon icon={faFile} size=\"4x\" />;\n  }\n}\nconst DirectoryViewer = forwardRef((props, ref ,initialPath ) => {\n  const [path, setPath] = useState(initialPath);\n  const [contents, setContents] = useState(null);\n  const sockets = new SocketResult();\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: (text) => {\n      TerminalInteraction.appendToTerminal(text);\n      sockets.sendMessage(text);\n      sockets.getMessage((chat) => {\n          const temp1 = chat;\n          const temp2 = chat;\n          const regex = /\\[(.*?)\\]/g;\n          const files = temp1.replace(regex, '$1').split(' ');\n          const regex2 = /\\[(directory|file)\\]/g;\n          const result =  temp2.match(regex2);\n          const regex3 = /\\[(.*?)\\]/g;\n          const filestype = result.map(item => item.replace(regex3, '$1'));\n          const setDir = {files,filestype};\n          setContents(setDir);\n    });\n    },\n\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: (newContent) => {\n      const temp = newContent.split(' ');\n      console.log(temp);\n      if(temp[0] == 'cd'){\n            const temp1 = temp;\n            const temp2 = temp;\n            const regex = /\\[(.*?)\\]/g;\n            const files = temp1.replace(regex, '$1').split(' ');\n            const regex2 = /\\[(directory|file)\\]/g;\n            const result =  temp2.match(regex2);\n            const regex3 = /\\[(.*?)\\]/g;\n            const filestype = result.map(item => item.replace(regex3, '$1'));\n            const setDir = {files,filestype};\n            setContents(setDir);\n        }\n      }\n    }\n  ));\n  useEffect(() => {\n    const fetchDirectoryData = async () => {\n      let fdata = null;\n      await fetch('http://172.16.230.134:4000/filesystem/1', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        },\n      })\n      .then(response => response.json())\n      .then(data => {\n        const files = data.files;\n        const filestype = data.filestype;\n        fdata = {files,filestype};\n      })\n      .catch(error => console.error('초기화 에러:', error));\n      console.log(\"data:\",fdata);\n      setContents(fdata);\n    };\n    fetchDirectoryData();\n  }, []);\n\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n      ref.current.appendToTerminal(`cd ${item}`);\n\n    } else {\n      ref.current.appendToTerminal(`cat ${item}`);\n    }\n  }\n  \n\n  if (!contents) {\n    return <div>Loading...</div>;\n  }\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px',\n    textAlign: 'center',\n    flexGrow:'1',\n    // overflowY : 'scroll'\n  };\n\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  const pathBar = {\n    position: 'absolute', /* 절대적 위치 설정 */\n    bottom: 0, /* 바닥에서 0px의 위치 */\n    textAlign: 'left', /* 텍스트 중앙 정렬 */\n    backgroundColor: '#c5e3df9d'/* 배경색 설정 */\n  }\n\n  return (\n    <div style={{position: 'relative',display:'flex'}}>\n      <p style={pathBar}>{path}</p>\n      <div style={{borderRight:'black solid 1px'}}>\n        sidebar\n      </div>\n      <div style={gridStyle}>\n        {contents.files.map((item, index) => (\n          <div key={index} style={itemStyle} onClick={() => handleItemClick(item, contents.filestype[index])}>\n            {getIconForType(contents.filestype[index])}\n            <div>{item}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport  {DirectoryViewer};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}