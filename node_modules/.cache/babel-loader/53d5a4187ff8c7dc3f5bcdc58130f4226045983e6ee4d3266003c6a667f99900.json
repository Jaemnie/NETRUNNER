{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile, faD } from '@fortawesome/free-solid-svg-icons';\nimport { SocketResult } from \"./socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFolder,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    case 'file':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n  }\n}\nconst DirectoryViewer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  var _contents$files;\n  _s();\n  const [contents, setContents] = useState(null);\n  const socketss = new SocketResult();\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: text => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: newContent => {\n      socketss.sendMessage('pwd');\n      socketss.getMessage(chat => {\n        socketss.sendMessage(`cd ${chat}`);\n      });\n      socketss.sendMessage(\"ls -al\");\n      socketss.getMessage(chat => {\n        const temp1 = chat;\n        const temp2 = chat;\n        const regex1 = /[^[\\]]+(?=\\[)/g;\n        const regex2 = /(?<=\\[).*?(?=\\])/g;\n        const files = temp1.match(regex1);\n        const filestype = temp2.match(regex2);\n        const setDir = {\n          files,\n          filestype\n        };\n        setContents(setDir);\n      });\n    },\n    initDir: dir => {\n      setContents(dir);\n    }\n  }));\n  useEffect(() => {\n    const fetchDirectoryData = async () => {\n      let fdata = null;\n      await fetch('http://172.16.230.134:4000/filesystem/1', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      }).then(response => response.json()).then(data => {\n        const files = data.files;\n        const filestype = data.filestype;\n        fdata = {\n          files,\n          filestype\n        };\n      }).catch(error => console.error('초기화 에러:', error));\n      setContents(fdata);\n    };\n    fetchDirectoryData();\n  }, []);\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      ref.current.appendToTerminal(`cd ${item}`);\n    } else {\n      ref.current.appendToTerminal(`cat ${item}`);\n    }\n  }\n  if (!contents) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px',\n    textAlign: 'center',\n    flexGrow: '1'\n    // overflowY : 'scroll'\n  };\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const pathBar = {\n    position: 'absolute',\n    /* 절대적 위치 설정 */\n    bottom: 0,\n    /* 바닥에서 0px의 위치 */\n    textAlign: 'left',\n    /* 텍스트 중앙 정렬 */\n    backgroundColor: '#c5e3df9d' /* 배경색 설정 */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRight: 'black solid 1px'\n      },\n      children: \"sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: (_contents$files = contents.files) === null || _contents$files === void 0 ? void 0 : _contents$files.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: itemStyle,\n        onClick: () => handleItemClick(item, contents.filestype[index]),\n        children: [getIconForType(contents.filestype[index]), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}, \"Ab+/HX4xSYtusImdUVpY8S2cJ7U=\")), \"Ab+/HX4xSYtusImdUVpY8S2cJ7U=\");\n_c2 = DirectoryViewer;\nexport { DirectoryViewer };\nvar _c, _c2;\n$RefreshReg$(_c, \"DirectoryViewer$forwardRef\");\n$RefreshReg$(_c2, \"DirectoryViewer\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useState","useEffect","TerminalInteraction","FontAwesomeIcon","faFolder","faFile","faD","SocketResult","jsxDEV","_jsxDEV","getIconForType","type","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","DirectoryViewer","_s","_c","props","ref","_contents$files","contents","setContents","socketss","appendToTerminal","text","updateDirectoryContent","newContent","sendMessage","getMessage","chat","temp1","temp2","regex1","regex2","files","match","filestype","setDir","initDir","dir","fetchDirectoryData","fdata","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","error","console","handleItemClick","item","current","children","gridStyle","display","gridTemplateColumns","gap","textAlign","flexGrow","itemStyle","cursor","flexDirection","alignItems","pathBar","position","bottom","backgroundColor","style","borderRight","map","index","onClick","_c2","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile, faD } from '@fortawesome/free-solid-svg-icons';\nimport {SocketResult} from \"./socket\";\n\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return <FontAwesomeIcon icon={faFolder} size=\"4x\" />;\n    case 'file':\n      return <FontAwesomeIcon icon={faFile} size=\"4x\" />;\n    default:\n      return <FontAwesomeIcon icon={faFile} size=\"4x\" />;\n  }\n}\nconst DirectoryViewer = forwardRef((props, ref ) => {\n\n  const [contents, setContents] = useState(null);\n  const socketss = new SocketResult();\n\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: (text) => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: (newContent) => {\n        socketss.sendMessage('pwd');\n        socketss.getMessage((chat) => {\n          socketss.sendMessage(`cd ${chat}`);\n        });\n        socketss.sendMessage(\"ls -al\");\n        socketss.getMessage((chat) => {\n            const temp1 = chat;\n            const temp2 = chat;\n            const regex1 = /[^[\\]]+(?=\\[)/g;\n            const regex2 = /(?<=\\[).*?(?=\\])/g;\n            const files = temp1.match(regex1); \n            const filestype = temp2.match(regex2);\n            const setDir ={files,filestype};\n            setContents(setDir);\n          });\n      },\n      initDir: (dir)=>{\n        setContents(dir);\n      }\n    }\n    \n  ));\n  useEffect(() => {\n    const fetchDirectoryData = async () => {\n      let fdata = null;\n      await fetch('http://172.16.230.134:4000/filesystem/1', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        },\n      })\n      .then(response => response.json())\n      .then(data => {\n        const files = data.files;\n        const filestype = data.filestype;\n        fdata = {files,filestype};\n      })\n      .catch(error => console.error('초기화 에러:', error));\n      setContents(fdata);\n    };\n    fetchDirectoryData();\n  }, []);\n\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      ref.current.appendToTerminal(`cd ${item}`);\n    } else {\n      ref.current.appendToTerminal(`cat ${item}`);\n    }\n  }\n  \n\n  if (!contents) {\n    return <div>Loading...</div>;\n  }\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px',\n    textAlign: 'center',\n    flexGrow:'1',\n    // overflowY : 'scroll'\n  };\n\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  const pathBar = {\n    position: 'absolute', /* 절대적 위치 설정 */\n    bottom: 0, /* 바닥에서 0px의 위치 */\n    textAlign: 'left', /* 텍스트 중앙 정렬 */\n    backgroundColor: '#c5e3df9d'/* 배경색 설정 */\n  }\n\n  return (\n    <div style={{position: 'relative',display:'flex'}}>\n      <div style={{borderRight:'black solid 1px'}}>\n        sidebar\n      </div>\n      <div style={gridStyle}>\n        {contents.files?.map((item, index) => (\n          <div key={index} style={itemStyle} onClick={() => handleItemClick(item, contents.filestype[index])}>\n            {getIconForType(contents.filestype[index])}\n            <div>{item}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport  {DirectoryViewer};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}