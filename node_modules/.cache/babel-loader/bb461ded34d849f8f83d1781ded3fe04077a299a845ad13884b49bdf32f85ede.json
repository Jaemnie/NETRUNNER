{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/termPage.jsx\",\n  _s = $RefreshSig$();\nimport { Terminal } from \"@xterm/xterm\";\nimport \"../../node_modules/@xterm/xterm/css/xterm.css\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { SocketResult } from \"./socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TermPage = ({\n  text,\n  onTerminalInput\n}) => {\n  _s();\n  const terminalRef = useRef(); // DOM 요소 참조를 위한 ref\n  const [t_terminal, setTerminal] = useState(null);\n  useEffect(() => {\n    if (terminalRef.current) {\n      const terminal = new Terminal();\n      terminal.onData(data => {\n        onTerminalInput(data);\n      });\n      let message = '';\n      const sockets = new SocketResult();\n      terminal.open(terminalRef.current);\n      setTerminal(terminal);\n      let currentInput = '';\n      terminal.write('Welcome to NetRunner!\\r\\n');\n      let currentPath = '/home/user';\n      terminal.current('', currentPath);\n      terminal.onKey(({\n        key,\n        domEvent\n      }) => {\n        const char = key;\n        if (domEvent.keyCode === 13) {\n          // Enter key\n          message = currentInput;\n          terminal.writeln('');\n          sockets.sendMessage(message, currentPath);\n          prompt('', currentPath);\n          sockets.getMessage(chat => {\n            terminal.write(chat);\n            terminal.writeln('');\n            prompt('', currentPath);\n            chat = '';\n          });\n          currentInput = '';\n        } else if (domEvent.keyCode === 8) {\n          // Backspace 처리\n          if (currentInput.length > 0) {\n            terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n            currentInput = currentInput.slice(0, -1);\n          }\n        } else {\n          currentInput += char;\n          terminal.write(char);\n        }\n      });\n      function prompt(ip, location) {\n        if (location === \"/root\") {\n          location = '~';\n        }\n        terminal.write(`${ip}root@root[${location}]$`);\n      }\n      return () => {\n        terminal.dispose();\n      };\n    }\n    if (text) {\n      t_terminal.write(text);\n      t_terminal.writeln('');\n    }\n  }, [text, onTerminalInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: terminalRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(TermPage, \"DNTvbk4yniUfObDbF/cf4AwFqLs=\");\n_c = TermPage;\nexport default TermPage;\nvar _c;\n$RefreshReg$(_c, \"TermPage\");","map":{"version":3,"names":["Terminal","React","useRef","useEffect","useState","SocketResult","jsxDEV","_jsxDEV","TermPage","text","onTerminalInput","_s","terminalRef","t_terminal","setTerminal","current","terminal","onData","data","message","sockets","open","currentInput","write","currentPath","onKey","key","domEvent","char","keyCode","writeln","sendMessage","prompt","getMessage","chat","length","slice","ip","location","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/termPage.jsx"],"sourcesContent":["import { Terminal } from \"@xterm/xterm\";\nimport \"../../node_modules/@xterm/xterm/css/xterm.css\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport {SocketResult} from \"./socket\";\n\nconst TermPage = ({text,onTerminalInput}) => {\n  const terminalRef = useRef(); // DOM 요소 참조를 위한 ref\n  const [t_terminal, setTerminal] = useState(null);\n  \n  useEffect(() => {\n    if (terminalRef.current) {\n      const terminal = new Terminal();\n      terminal.onData((data) => {\n        onTerminalInput(data);\n      });\n      let message = '';\n      const sockets = new SocketResult();\n      terminal.open(terminalRef.current);\n      setTerminal(terminal);\n      let currentInput = '';\n      terminal.write('Welcome to NetRunner!\\r\\n');\n      let currentPath = '/home/user';\n      terminal.current('',currentPath);\n      terminal.onKey(({ key, domEvent }) => {\n          const char = key;\n          if (domEvent.keyCode === 13) {  // Enter key\n              message = currentInput;\n              terminal.writeln('');\n              sockets.sendMessage(message,currentPath);\n              prompt('',currentPath);\n              sockets.getMessage((chat) => {\n                terminal.write(chat);\n                terminal.writeln('');\n                  prompt('',currentPath)\n                  chat= '';\n              });\n              currentInput = '';\n          } else if (domEvent.keyCode === 8) {\n              // Backspace 처리\n              if (currentInput.length > 0) {\n                terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n                  currentInput = currentInput.slice(0, -1);\n              }\n          } else {\n              currentInput += char;\n              terminal.write(char);\n          }\n      });\n      function prompt(ip, location) {\n          if (location === \"/root\") {\n              location = '~';\n          }\n          terminal.write(`${ip}root@root[${location}]$`);\n      }\n      return () => {\n        terminal.dispose();\n      };\n    }\n\n    if (text) {\n      t_terminal.write(text);\n      t_terminal.writeln('');\n    }\n  }, [text,onTerminalInput]);\n  return <div ref={terminalRef}></div>;\n}\nexport default TermPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}