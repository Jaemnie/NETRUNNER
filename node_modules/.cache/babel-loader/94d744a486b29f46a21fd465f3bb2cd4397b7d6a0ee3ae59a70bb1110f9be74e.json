{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/DirectoryViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFolder,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    case 'file':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"4x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n  }\n}\nconst DirectoryViewer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [directoryContent, setDirectoryContent] = useState([]);\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: text => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: newContent => {\n      setDirectoryContent(newContent);\n    }\n  }));\n  useEffect(() => {\n    // 백엔드 연동 로직은 여기에 구현\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory', 'file', 'file', 'directory', 'file', 'file', 'directory', 'file', 'file', 'directory']\n    };\n    setContents(exampleData);\n    // setContents();\n  }, [path]);\n\n  // useEffect(() => {\n  //   // 백엔드에서 제공받은 데이터를 가공하여 화면에 표시\n  //   const fetchDirectoryData = async () => {\n  //     const data = await fetch('/api/directory');\n  //     setDirectoryContent(data);\n  //   };\n  //   fetchDirectoryData();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: directoryContent.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}, \"y/JTnw5roYAAPgygdToW7SNLUAw=\")), \"y/JTnw5roYAAPgygdToW7SNLUAw=\");\n_c2 = DirectoryViewer;\nexport { DirectoryViewer };\nvar _c, _c2;\n$RefreshReg$(_c, \"DirectoryViewer$forwardRef\");\n$RefreshReg$(_c2, \"DirectoryViewer\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useState","useEffect","TerminalInteraction","FontAwesomeIcon","faFolder","faFile","jsxDEV","_jsxDEV","getIconForType","type","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","DirectoryViewer","_s","_c","props","ref","directoryContent","setDirectoryContent","appendToTerminal","text","updateDirectoryContent","newContent","exampleData","files","filestype","setContents","path","children","map","item","name","id","_c2","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/DirectoryViewer.jsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\n\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return <FontAwesomeIcon icon={faFolder} size=\"4x\" />;\n    case 'file':\n      return <FontAwesomeIcon icon={faFile} size=\"4x\" />;\n    default:\n      return <FontAwesomeIcon icon={faFile} size=\"4x\" />;\n  }\n}\n\nconst DirectoryViewer = forwardRef((props, ref) => {\n  const [directoryContent, setDirectoryContent] = useState([]);\n\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: (text) => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: (newContent) => {\n      setDirectoryContent(newContent);\n    }\n  }));\n  useEffect(() => {\n    // 백엔드 연동 로직은 여기에 구현\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory','file', 'file', 'directory','file', 'file', 'directory','file', 'file', 'directory']\n    };\n    setContents(exampleData);\n    // setContents();\n  }, [path]);\n\n  // useEffect(() => {\n  //   // 백엔드에서 제공받은 데이터를 가공하여 화면에 표시\n  //   const fetchDirectoryData = async () => {\n  //     const data = await fetch('/api/directory');\n  //     setDirectoryContent(data);\n  //   };\n  //   fetchDirectoryData();\n  // }, []);\n\n  return (\n    <div>\n      {directoryContent.map((item) => (\n        <div key={item.id}>{item.name}</div>\n      ))}\n    </div>\n  );\n});\n\nexport  {DirectoryViewer};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,mBAAmB,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnF,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC5B,QAAQA,IAAI;IACV,KAAK,WAAW;MACd,oBAAOF,OAAA,CAACJ,eAAe;QAACO,IAAI,EAAEN,QAAS;QAACO,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACtD,KAAK,MAAM;MACT,oBAAOR,OAAA,CAACJ,eAAe;QAACO,IAAI,EAAEL,MAAO;QAACM,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpD;MACE,oBAAOR,OAAA,CAACJ,eAAe;QAACO,IAAI,EAAEL,MAAO;QAACM,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;EACtD;AACF;AAEA,MAAMC,eAAe,gBAAAC,EAAA,eAAGnB,UAAU,CAAAoB,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAAAH,EAAA;EACjD,MAAM,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE5DD,mBAAmB,CAACqB,GAAG,EAAE,OAAO;IAC9B;IACAG,gBAAgB,EAAGC,IAAI,IAAK;MAC1BtB,mBAAmB,CAACqB,gBAAgB,CAACC,IAAI,CAAC;IAC5C,CAAC;IAED;IACAC,sBAAsB,EAAGC,UAAU,IAAK;MACtCJ,mBAAmB,CAACI,UAAU,CAAC;IACjC;EACF,CAAC,CAAC,CAAC;EACHzB,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,WAAW,GAAG;MAClBC,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,EAAC,WAAW,EAAE,WAAW,EAAE,YAAY,EAAC,WAAW,EAAE,WAAW,EAAE,YAAY,EAAC,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC;MACpKC,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAC,MAAM,EAAE,MAAM,EAAE,WAAW;IAC7H,CAAC;IACDC,WAAW,CAACH,WAAW,CAAC;IACxB;EACF,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;;EAEV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACExB,OAAA;IAAAyB,QAAA,EACGX,gBAAgB,CAACY,GAAG,CAAEC,IAAI,iBACzB3B,OAAA;MAAAyB,QAAA,EAAoBE,IAAI,CAACC;IAAI,GAAnBD,IAAI,CAACE,EAAE;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC,kCAAC;AAACsB,GAAA,GAxCGrB,eAAe;AA0CrB,SAASA,eAAe;AAAE,IAAAE,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}