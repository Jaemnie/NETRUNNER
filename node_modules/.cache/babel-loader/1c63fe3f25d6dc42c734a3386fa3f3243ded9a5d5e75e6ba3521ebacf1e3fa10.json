{"ast":null,"code":"import io from 'socket.io-client';\nclass SocketResult {\n  constructor() {\n    const token = localStorage.getItem('accessToken');\n    this.socket = io('http://netrunner.life:4000/gui', {\n      query: {\n        token\n      }\n    });\n    this.socket.on('message', data => {\n      if (this.onMessageReceived) {\n        this.onMessageReceived(data);\n      }\n    });\n  }\n  joinRoom(id) {\n    this.roomId = id;\n    this.socket.emit('join', {\n      roomId: `${id}roomId`\n    });\n  }\n  getRoomId() {\n    return this.roomId;\n  }\n  getMessage(callback) {\n    this.onMessageReceived = callback;\n  }\n  sendMessage(message) {\n    this.socket.emit('message', {\n      roomId: `${this.roomId}roomId`,\n      payload: `${message}`\n    });\n  }\n  leaveRoom() {\n    this.socket.emit('leave', {\n      roomId: `${this.roomId}roomId`\n    });\n  }\n}\nexport { SocketResult };","map":{"version":3,"names":["io","SocketResult","constructor","token","localStorage","getItem","socket","query","on","data","onMessageReceived","joinRoom","id","roomId","emit","getRoomId","getMessage","callback","sendMessage","message","payload","leaveRoom"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/Gsocket.jsx"],"sourcesContent":["import io from 'socket.io-client';\n\nclass SocketResult {\n    constructor() {\n        const token = localStorage.getItem('accessToken');\n        this.socket = io('http://netrunner.life:4000/gui', {\n            query: { token }\n        });\n\n        this.socket.on('message', (data) => {\n            if (this.onMessageReceived) {\n                this.onMessageReceived(data);\n            }\n        });\n    }\n\n    joinRoom(id) {\n        this.roomId = id;\n        this.socket.emit('join', { roomId: `${id}roomId` });\n    }\n\n    getRoomId() {\n        return this.roomId;\n    }\n\n    getMessage(callback) {\n        this.onMessageReceived = callback;\n    }\n\n    sendMessage(message) {\n        this.socket.emit('message', { roomId: `${this.roomId}roomId`, payload: `${message}` });\n    }\n\n    leaveRoom() {\n        this.socket.emit('leave', { roomId: `${this.roomId}roomId` });\n    }\n}\n\nexport { SocketResult };\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,IAAI,CAACC,MAAM,GAAGN,EAAE,CAAC,gCAAgC,EAAE;MAC/CO,KAAK,EAAE;QAAEJ;MAAM;IACnB,CAAC,CAAC;IAEF,IAAI,CAACG,MAAM,CAACE,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAChC,IAAI,IAAI,CAACC,iBAAiB,EAAE;QACxB,IAAI,CAACA,iBAAiB,CAACD,IAAI,CAAC;MAChC;IACJ,CAAC,CAAC;EACN;EAEAE,QAAQA,CAACC,EAAE,EAAE;IACT,IAAI,CAACC,MAAM,GAAGD,EAAE;IAChB,IAAI,CAACN,MAAM,CAACQ,IAAI,CAAC,MAAM,EAAE;MAAED,MAAM,EAAG,GAAED,EAAG;IAAQ,CAAC,CAAC;EACvD;EAEAG,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACF,MAAM;EACtB;EAEAG,UAAUA,CAACC,QAAQ,EAAE;IACjB,IAAI,CAACP,iBAAiB,GAAGO,QAAQ;EACrC;EAEAC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACb,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAE;MAAED,MAAM,EAAG,GAAE,IAAI,CAACA,MAAO,QAAO;MAAEO,OAAO,EAAG,GAAED,OAAQ;IAAE,CAAC,CAAC;EAC1F;EAEAE,SAASA,CAAA,EAAG;IACR,IAAI,CAACf,MAAM,CAACQ,IAAI,CAAC,OAAO,EAAE;MAAED,MAAM,EAAG,GAAE,IAAI,CAACA,MAAO;IAAQ,CAAC,CAAC;EACjE;AACJ;AAEA,SAASZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}