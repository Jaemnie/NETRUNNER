{"ast":null,"code":"import io from 'socket.io-client';\nclass SocketResult {\n  constructor() {\n    // Token은 인스턴스가 생성될 때 한 번만 설정되어야 합니다.\n    const token = localStorage.getItem('accessToken');\n    // this.socket을 사용해 클래스 내 다른 메소드에서도 소켓에 접근할 수 있습니다.\n    this.socket = io('http://localhost:4000/term', {\n      query: {\n        token\n      }\n    }); // NestJS 서버 주소\n  }\n\n  // 메시지를 받는 메소드\n  getMessage(callback) {\n    // callback 함수를 이용해 외부에서 메시지 처리를 할 수 있도록 합니다.\n    this.socket.on('message', payload => {\n      callback(payload);\n    });\n  }\n\n  // 메시지를 보내는 메소드\n  sendMessage(message) {\n    this.socket.emit('message', message);\n  }\n}\nexport { SocketResult };","map":{"version":3,"names":["io","SocketResult","constructor","token","localStorage","getItem","socket","query","getMessage","callback","on","payload","sendMessage","message","emit"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/socket.jsx"],"sourcesContent":["import io from 'socket.io-client';\n\nclass SocketResult {\n    constructor() {\n        // Token은 인스턴스가 생성될 때 한 번만 설정되어야 합니다.\n        const token = localStorage.getItem('accessToken');\n        // this.socket을 사용해 클래스 내 다른 메소드에서도 소켓에 접근할 수 있습니다.\n        this.socket = io('http://localhost:4000/term', {\n            query: { token }\n        }); // NestJS 서버 주소\n    }\n\n    // 메시지를 받는 메소드\n    getMessage(callback) {\n        // callback 함수를 이용해 외부에서 메시지 처리를 할 수 있도록 합니다.\n        this.socket.on('message', (payload) => {\n            callback(payload);\n        });\n    }\n\n    // 메시지를 보내는 메소드\n    sendMessage(message) {\n        this.socket.emit('message', message);\n    }\n}\n\nexport { SocketResult };\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD;IACA,IAAI,CAACC,MAAM,GAAGN,EAAE,CAAC,4BAA4B,EAAE;MAC3CO,KAAK,EAAE;QAAEJ;MAAM;IACnB,CAAC,CAAC,CAAC,CAAC;EACR;;EAEA;EACAK,UAAUA,CAACC,QAAQ,EAAE;IACjB;IACA,IAAI,CAACH,MAAM,CAACI,EAAE,CAAC,SAAS,EAAGC,OAAO,IAAK;MACnCF,QAAQ,CAACE,OAAO,CAAC;IACrB,CAAC,CAAC;EACN;;EAEA;EACAC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACP,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAED,OAAO,CAAC;EACxC;AACJ;AAEA,SAASZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}