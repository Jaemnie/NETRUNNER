{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\NETRUNNER\\\\src\\\\pages\\\\mainPages\\\\Setting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { SVG } from '@svgdotjs/svg.js';\nimport { useNavigate } from 'react-router-dom'; // useNavigate로 수정\nimport { useAudio } from '../../components/Background/AudioContext'; // 컨텍스트 가져오기\nimport styles from './Setting.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Setting({\n  show,\n  onClose\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isMuted,\n    toggleMute\n  } = useAudio(); // 음소거 상태와 토글 함수 가져오기\n\n  useEffect(() => {\n    if (!show) return;\n    const slideToggle = document.getElementById(\"slide-toggle-control\");\n    if (!slideToggle) return;\n    const slide = {\n      element: slideToggle,\n      handler: svgSlideEffect,\n      offset: 10,\n      duration: 200,\n      random: false\n    };\n    const slideEffect = new SvgToggleEffect(slide);\n    return () => {\n      slideEffect.cleanup();\n    };\n  }, [show]);\n  if (!show) {\n    return null;\n  }\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://netrunner.life:4000/auth/signout', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`로그아웃 실패: ${response.statusText}`);\n      }\n\n      // 로그아웃 성공 시 로컬 저장소에서 JWT 토큰 제거\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('userId'); // userId 삭제\n      localStorage.removeItem('leaveRoom');\n      navigate('/'); // 초기 화면으로 이동\n\n      console.log('로그아웃 되었습니다.');\n    } catch (error) {\n      console.error('로그아웃 에러:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalOverlay,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.header,\n        children: \"Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"slide-toggle-control\",\n          checked: isMuted,\n          onChange: toggleMute // 체크박스 상태 변경 시 음소거 토글\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"slide-toggle-control\",\n          className: styles.controlLabel,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"84\",\n            height: \"36\",\n            children: /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"84\",\n              height: \"36\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.labelText,\n            children: \"BGM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Setting, \"U6VokZWFMbHKdifM/aJxEofKekk=\", false, function () {\n  return [useNavigate, useAudio];\n});\n_c = Setting;\nclass SvgToggleEffect {\n  constructor(effect) {\n    this.node = SVG(effect.element.nextElementSibling.querySelector('svg'));\n    this.listener = () => {\n      if (effect.element.checked) {\n        effect.handler([this.node], false, effect.duration, effect.offset);\n      } else {\n        effect.handler([this.node], true, effect.duration, effect.offset);\n      }\n    };\n    effect.element.addEventListener(\"change\", this.listener);\n  }\n  cleanup() {\n    this.node.node.removeEventListener(\"change\", this.listener);\n  }\n}\nconst svgSlideEffect = (nodes = [], reverse = false, duration = 100, offset = 10) => {\n  nodes.forEach((node, index) => {\n    setTimeout(() => {\n      if (reverse) {\n        node.animate({\n          duration: duration\n        }).transform({\n          x: 0\n        });\n      } else {\n        node.animate({\n          duration: duration\n        }).transform({\n          x: 48\n        });\n      }\n    }, index * offset);\n  });\n};\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useEffect","SVG","useNavigate","useAudio","styles","jsxDEV","_jsxDEV","Setting","show","onClose","_s","navigate","isMuted","toggleMute","slideToggle","document","getElementById","slide","element","handler","svgSlideEffect","offset","duration","random","slideEffect","SvgToggleEffect","cleanup","handleLogout","response","fetch","method","headers","localStorage","getItem","ok","Error","statusText","removeItem","console","log","error","className","modalOverlay","onClick","children","modalContent","e","stopPropagation","header","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","id","checked","onChange","htmlFor","controlLabel","width","height","x","y","labelText","_c","constructor","effect","node","nextElementSibling","querySelector","listener","addEventListener","removeEventListener","nodes","reverse","forEach","index","setTimeout","animate","transform","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/NETRUNNER/src/pages/mainPages/Setting.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { SVG } from '@svgdotjs/svg.js';\r\nimport { useNavigate } from 'react-router-dom'; // useNavigate로 수정\r\nimport { useAudio } from '../../components/Background/AudioContext'; // 컨텍스트 가져오기\r\nimport styles from './Setting.module.css';\r\n\r\nfunction Setting({ show, onClose }) {\r\n  const navigate = useNavigate();\r\n  const { isMuted, toggleMute } = useAudio(); // 음소거 상태와 토글 함수 가져오기\r\n\r\n  useEffect(() => {\r\n    if (!show) return;\r\n\r\n    const slideToggle = document.getElementById(\"slide-toggle-control\");\r\n\r\n    if (!slideToggle) return;\r\n\r\n    const slide = {\r\n      element: slideToggle,\r\n      handler: svgSlideEffect,\r\n      offset: 10,\r\n      duration: 200,\r\n      random: false,\r\n    };\r\n\r\n    const slideEffect = new SvgToggleEffect(slide);\r\n\r\n    return () => {\r\n      slideEffect.cleanup();\r\n    };\r\n  }, [show]);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await fetch('http://netrunner.life:4000/auth/signout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`로그아웃 실패: ${response.statusText}`);\r\n      }\r\n\r\n      // 로그아웃 성공 시 로컬 저장소에서 JWT 토큰 제거\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('userId'); // userId 삭제\r\n      localStorage.removeItem('leaveRoom');\r\n      navigate('/'); // 초기 화면으로 이동\r\n\r\n      console.log('로그아웃 되었습니다.');\r\n    } catch (error) {\r\n      console.error('로그아웃 에러:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <h2 className={styles.header}>Setting</h2>\r\n        <div className={styles.inputContainer}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"slide-toggle-control\"\r\n            checked={isMuted}\r\n            onChange={toggleMute} // 체크박스 상태 변경 시 음소거 토글\r\n          />\r\n          <label htmlFor=\"slide-toggle-control\" className={styles.controlLabel}>\r\n            <svg width=\"84\" height=\"36\">\r\n              <rect x=\"0\" y=\"0\" width=\"84\" height=\"36\" />\r\n            </svg>\r\n            <span className={styles.labelText}>BGM</span> {/* BGM 텍스트 추가 */}\r\n          </label>\r\n        </div>\r\n        <button onClick={handleLogout}>Logout</button>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass SvgToggleEffect {\r\n  constructor(effect) {\r\n    this.node = SVG(effect.element.nextElementSibling.querySelector('svg'));\r\n\r\n    this.listener = () => {\r\n      if (effect.element.checked) {\r\n        effect.handler([this.node], false, effect.duration, effect.offset);\r\n      } else {\r\n        effect.handler([this.node], true, effect.duration, effect.offset);\r\n      }\r\n    };\r\n\r\n    effect.element.addEventListener(\"change\", this.listener);\r\n  }\r\n\r\n  cleanup() {\r\n    this.node.node.removeEventListener(\"change\", this.listener);\r\n  }\r\n}\r\n\r\nconst svgSlideEffect = (nodes = [], reverse = false, duration = 100, offset = 10) => {\r\n  nodes.forEach((node, index) => {\r\n    setTimeout(() => {\r\n      if (reverse) {\r\n        node.animate({ duration: duration }).transform({ x: 0 });\r\n      } else {\r\n        node.animate({ duration: duration }).transform({ x: 48 });\r\n      }\r\n    }, index * offset);\r\n  });\r\n};\r\n\r\nexport default Setting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}