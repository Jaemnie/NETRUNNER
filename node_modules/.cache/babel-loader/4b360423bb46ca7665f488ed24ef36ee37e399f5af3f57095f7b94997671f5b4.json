{"ast":null,"code":"import { SocketResult } from \"./socket\";\nimport { TerminalInteraction } from './TerminalInteraction';\nfunction Termi(terminal2, elements) {\n  let message = '';\n  const sockets = new SocketResult();\n  const terminal = terminal2;\n  terminal.open(elements);\n  let currentInput = '';\n  terminal.write('Welcome to NetRunner!\\r\\n');\n  let currentPath = '/home/user';\n  prompt('', currentPath);\n  terminal.onKey(({\n    key,\n    domEvent\n  }) => {\n    const char = key;\n    if (domEvent.keyCode === 13) {\n      // Enter key\n      message = currentInput;\n      terminal.writeln('');\n      sockets.sendMessage(message, currentPath);\n      prompt('', currentPath);\n      TerminalInteraction.handleTerminalInput(message);\n      sockets.getMessage(chat => {\n        terminal.write(chat);\n        terminal.writeln('');\n        prompt('', currentPath);\n        chat = '';\n      });\n      currentInput = '';\n    } else if (domEvent.keyCode === 8) {\n      // Backspace 처리\n      if (currentInput.length > 0) {\n        terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n        currentInput = currentInput.slice(0, -1);\n      }\n    } else {\n      currentInput += char;\n      terminal.write(char);\n    }\n  });\n  function prompt(ip, location) {\n    if (location === \"/root\") {\n      location = '~';\n    }\n    terminal.write(`${ip}root@root[${location}]$`);\n  }\n}\n_c = Termi;\nexport { Termi };\nvar _c;\n$RefreshReg$(_c, \"Termi\");","map":{"version":3,"names":["SocketResult","TerminalInteraction","Termi","terminal2","elements","message","sockets","terminal","open","currentInput","write","currentPath","prompt","onKey","key","domEvent","char","keyCode","writeln","sendMessage","handleTerminalInput","getMessage","chat","length","slice","ip","location","_c","$RefreshReg$"],"sources":["C:/Users/jae min/Documents/GitHub/NETRUNNER/src/components/termsocket.jsx"],"sourcesContent":["\r\nimport {SocketResult} from \"./socket\";\r\nimport { TerminalInteraction } from './TerminalInteraction';\r\n\r\nfunction Termi(terminal2,elements) {\r\n    let message = '';\r\n    const sockets = new SocketResult();\r\n    const terminal = terminal2;\r\n    terminal.open(elements);\r\n    let currentInput = '';\r\n    terminal.write('Welcome to NetRunner!\\r\\n');\r\n    let currentPath = '/home/user';\r\n    prompt('',currentPath);\r\n    terminal.onKey(({ key, domEvent }) => {\r\n        const char = key;\r\n        if (domEvent.keyCode === 13) {  // Enter key\r\n            message = currentInput;\r\n            terminal.writeln('');\r\n            sockets.sendMessage(message,currentPath);\r\n            prompt('',currentPath);\r\n            TerminalInteraction.handleTerminalInput(message);\r\n            sockets.getMessage((chat) => {\r\n                terminal.write(chat);\r\n                terminal.writeln('');\r\n                prompt('',currentPath)\r\n                chat= '';\r\n            });\r\n            currentInput = '';\r\n        } else if (domEvent.keyCode === 8) {\r\n            // Backspace 처리\r\n            if (currentInput.length > 0) {\r\n                terminal.write('\\b \\b'); // 터미널에서 문자를 제거\r\n                currentInput = currentInput.slice(0, -1);\r\n            }\r\n        } else {\r\n            currentInput += char;\r\n            terminal.write(char);\r\n        }\r\n    });\r\n    function prompt(ip, location) {\r\n        if (location === \"/root\") {\r\n            location = '~';\r\n        }\r\n        terminal.write(`${ip}root@root[${location}]$`);\r\n    }\r\n}\r\n\r\nexport { Termi };\r\n\r\n"],"mappings":"AACA,SAAQA,YAAY,QAAO,UAAU;AACrC,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,SAASC,KAAKA,CAACC,SAAS,EAACC,QAAQ,EAAE;EAC/B,IAAIC,OAAO,GAAG,EAAE;EAChB,MAAMC,OAAO,GAAG,IAAIN,YAAY,CAAC,CAAC;EAClC,MAAMO,QAAQ,GAAGJ,SAAS;EAC1BI,QAAQ,CAACC,IAAI,CAACJ,QAAQ,CAAC;EACvB,IAAIK,YAAY,GAAG,EAAE;EACrBF,QAAQ,CAACG,KAAK,CAAC,2BAA2B,CAAC;EAC3C,IAAIC,WAAW,GAAG,YAAY;EAC9BC,MAAM,CAAC,EAAE,EAACD,WAAW,CAAC;EACtBJ,QAAQ,CAACM,KAAK,CAAC,CAAC;IAAEC,GAAG;IAAEC;EAAS,CAAC,KAAK;IAClC,MAAMC,IAAI,GAAGF,GAAG;IAChB,IAAIC,QAAQ,CAACE,OAAO,KAAK,EAAE,EAAE;MAAG;MAC5BZ,OAAO,GAAGI,YAAY;MACtBF,QAAQ,CAACW,OAAO,CAAC,EAAE,CAAC;MACpBZ,OAAO,CAACa,WAAW,CAACd,OAAO,EAACM,WAAW,CAAC;MACxCC,MAAM,CAAC,EAAE,EAACD,WAAW,CAAC;MACtBV,mBAAmB,CAACmB,mBAAmB,CAACf,OAAO,CAAC;MAChDC,OAAO,CAACe,UAAU,CAAEC,IAAI,IAAK;QACzBf,QAAQ,CAACG,KAAK,CAACY,IAAI,CAAC;QACpBf,QAAQ,CAACW,OAAO,CAAC,EAAE,CAAC;QACpBN,MAAM,CAAC,EAAE,EAACD,WAAW,CAAC;QACtBW,IAAI,GAAE,EAAE;MACZ,CAAC,CAAC;MACFb,YAAY,GAAG,EAAE;IACrB,CAAC,MAAM,IAAIM,QAAQ,CAACE,OAAO,KAAK,CAAC,EAAE;MAC/B;MACA,IAAIR,YAAY,CAACc,MAAM,GAAG,CAAC,EAAE;QACzBhB,QAAQ,CAACG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACzBD,YAAY,GAAGA,YAAY,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5C;IACJ,CAAC,MAAM;MACHf,YAAY,IAAIO,IAAI;MACpBT,QAAQ,CAACG,KAAK,CAACM,IAAI,CAAC;IACxB;EACJ,CAAC,CAAC;EACF,SAASJ,MAAMA,CAACa,EAAE,EAAEC,QAAQ,EAAE;IAC1B,IAAIA,QAAQ,KAAK,OAAO,EAAE;MACtBA,QAAQ,GAAG,GAAG;IAClB;IACAnB,QAAQ,CAACG,KAAK,CAAE,GAAEe,EAAG,aAAYC,QAAS,IAAG,CAAC;EAClD;AACJ;AAACC,EAAA,GAzCQzB,KAAK;AA2Cd,SAASA,KAAK;AAAG,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}