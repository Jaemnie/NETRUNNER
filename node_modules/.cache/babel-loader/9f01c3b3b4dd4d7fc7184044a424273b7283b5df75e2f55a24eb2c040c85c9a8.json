{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/DirectoryViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectoryViewer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [directoryContent, setDirectoryContent] = useState([]);\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: text => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: newContent => {\n      setDirectoryContent(newContent);\n    }\n  }));\n  useEffect(() => {\n    // 백엔드에서 제공받은 데이터를 가공하여 화면에 표시\n    const fetchDirectoryData = async () => {\n      const data = await fetch('/api/directory');\n      setDirectoryContent(data);\n    };\n    fetchDirectoryData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: directoryContent.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}, \"y/JTnw5roYAAPgygdToW7SNLUAw=\")), \"y/JTnw5roYAAPgygdToW7SNLUAw=\");\n_c2 = DirectoryViewer;\nexport { DirectoryViewer };\nvar _c, _c2;\n$RefreshReg$(_c, \"DirectoryViewer$forwardRef\");\n$RefreshReg$(_c2, \"DirectoryViewer\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useState","useEffect","TerminalInteraction","jsxDEV","_jsxDEV","DirectoryViewer","_s","_c","props","ref","directoryContent","setDirectoryContent","appendToTerminal","text","updateDirectoryContent","newContent","fetchDirectoryData","data","fetch","children","map","item","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/DirectoryViewer.jsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { TerminalInteraction } from './TerminalInteraction';\n\n\nconst DirectoryViewer = forwardRef((props, ref) => {\n  const [directoryContent, setDirectoryContent] = useState([]);\n\n  useImperativeHandle(ref, () => ({\n    // DirectoryViewer에서 터미널 창에 텍스트를 입력하는 함수\n    appendToTerminal: (text) => {\n      TerminalInteraction.appendToTerminal(text);\n    },\n\n    // DirectoryViewer에서 파일 시스템 내용을 변경하는 함수\n    updateDirectoryContent: (newContent) => {\n      setDirectoryContent(newContent);\n    }\n  }));\n\n  useEffect(() => {\n    // 백엔드에서 제공받은 데이터를 가공하여 화면에 표시\n    const fetchDirectoryData = async () => {\n      const data = await fetch('/api/directory');\n      setDirectoryContent(data);\n    };\n    fetchDirectoryData();\n  }, []);\n\n  return (\n    <div>\n      {directoryContent.map((item) => (\n        <div key={item.id}>{item.name}</div>\n      ))}\n    </div>\n  );\n});\n\nexport  {DirectoryViewer};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,mBAAmB,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnF,SAASC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,MAAMC,eAAe,gBAAAC,EAAA,eAAGR,UAAU,CAAAS,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAAAH,EAAA;EACjD,MAAM,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5DD,mBAAmB,CAACU,GAAG,EAAE,OAAO;IAC9B;IACAG,gBAAgB,EAAGC,IAAI,IAAK;MAC1BX,mBAAmB,CAACU,gBAAgB,CAACC,IAAI,CAAC;IAC5C,CAAC;IAED;IACAC,sBAAsB,EAAGC,UAAU,IAAK;MACtCJ,mBAAmB,CAACI,UAAU,CAAC;IACjC;EACF,CAAC,CAAC,CAAC;EAEHd,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;MAC1CP,mBAAmB,CAACM,IAAI,CAAC;IAC3B,CAAC;IACDD,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAe,QAAA,EACGT,gBAAgB,CAACU,GAAG,CAAEC,IAAI,iBACzBjB,OAAA;MAAAe,QAAA,EAAoBE,IAAI,CAACC;IAAI,GAAnBD,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC,kCAAC;AAACC,GAAA,GA/BGvB,eAAe;AAiCrB,SAASA,eAAe;AAAE,IAAAE,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}