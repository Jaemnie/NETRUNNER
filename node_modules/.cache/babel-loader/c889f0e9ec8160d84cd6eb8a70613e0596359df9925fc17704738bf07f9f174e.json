{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/main.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import TermPage from './termPage';\nimport DirectoryViewer from './fileSystem';\nimport { Terminal } from \"@xterm/xterm\";\nimport \"@xterm/xterm/css/xterm.css\";\nimport { SocketResult } from \"./socket\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  const [terminalText, setTerminalText] = useState('');\n  const [guiState, setGUIState] = useState('');\n  const term = new Terminal();\n  const element = document.getElementById('terminal');\n  const handleGUIEvent = text => {\n    setTerminalText(prevText => `${prevText}\\n${text}`);\n  };\n  const handleTerminalInput = input => {\n    // 특정 텍스트 입력 감지 및 GUI 상태 변경\n    if (input === '/changeGUI') {\n      setGUIState('updated');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DirectoryViewer, {\n      command: guiState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TermPage, {\n      term: term,\n      element: element,\n      onTerminalInput: handleTerminalInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MainComponent, \"A5prZ9INYt7N4oW1nS3DEdH0uPQ=\");\n_c = MainComponent;\nexport default MainComponent;\nconst TermPage = ({\n  term,\n  element,\n  onTerminalInput\n}) => {\n  _s2();\n  const [terminal, setTerminal] = useState(null);\n  useEffect(() => {\n    if (!terminal && element) {\n      try {\n        const newTerminal = term;\n        newTerminal.onData(data => {\n          onTerminalInput(data);\n        });\n        newTerminal.open(element);\n        setTerminal(newTerminal);\n        const sockets = new SocketResult();\n        let currentInput = \"\";\n        let currentPath = \"/home/user\";\n        newTerminal.write(\"Welcome to NetRunner!\\r\\n\");\n        prompt(newTerminal, currentPath);\n        newTerminal.onKey(({\n          key,\n          domEvent\n        }) => {\n          const char = key;\n          if (domEvent.keyCode === 13) {\n            // Enter key\n            const message = currentInput;\n            newTerminal.writeln(\"\");\n            sockets.sendMessage(message, currentPath);\n            prompt(newTerminal, currentPath);\n            sockets.getMessage(chat => {\n              newTerminal.write(chat);\n              newTerminal.writeln(\"\");\n              prompt(newTerminal, currentPath);\n            });\n            currentInput = \"\";\n          } else if (domEvent.keyCode === 8) {\n            // Backspace 처리\n            if (currentInput.length > 0) {\n              newTerminal.write(\"\\b \\b\"); // 터미널에서 문자를 제거\n              currentInput = currentInput.slice(0, -1);\n            }\n          } else {\n            currentInput += char;\n            newTerminal.write(char);\n          }\n        });\n        return () => {\n          newTerminal.dispose();\n        };\n      } catch (error) {\n        console.error(\"Error initializing terminal:\", error);\n      }\n    }\n  }, [term, element, onTerminalInput, terminal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"terminal\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n};\n_s2(TermPage, \"m/DAvXlNNn/02KD4HAWGqwAMrpc=\");\n_c2 = TermPage;\nfunction prompt(terminal, location) {\n  if (location === \"/root\") {\n    location = \"~\";\n  }\n  terminal.write(`root@root[${location}]$`);\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"MainComponent\");\n$RefreshReg$(_c2, \"TermPage\");","map":{"version":3,"names":["React","useEffect","useState","DirectoryViewer","Terminal","SocketResult","jsxDEV","_jsxDEV","Fragment","_Fragment","MainComponent","_s","terminalText","setTerminalText","guiState","setGUIState","term","element","document","getElementById","handleGUIEvent","text","prevText","handleTerminalInput","input","children","command","fileName","_jsxFileName","lineNumber","columnNumber","TermPage","onTerminalInput","_c","_s2","terminal","setTerminal","newTerminal","onData","data","open","sockets","currentInput","currentPath","write","prompt","onKey","key","domEvent","char","keyCode","message","writeln","sendMessage","getMessage","chat","length","slice","dispose","error","console","id","style","width","height","_c2","location","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/main.jsx"],"sourcesContent":["import React, { useEffect,useState } from 'react';\n// import TermPage from './termPage';\nimport DirectoryViewer from './fileSystem';\nimport { Terminal } from \"@xterm/xterm\";\nimport \"@xterm/xterm/css/xterm.css\";\nimport { SocketResult } from \"./socket\";\n\nconst MainComponent = () => {\n  const [terminalText, setTerminalText] = useState('');\n  const [guiState, setGUIState] = useState('');\n  const term = new Terminal();\n  const element = document.getElementById('terminal');\n\n  const handleGUIEvent = (text) => {\n    setTerminalText((prevText) => `${prevText}\\n${text}`);\n  };\n\n  const handleTerminalInput = (input) => {\n    // 특정 텍스트 입력 감지 및 GUI 상태 변경\n    if (input === '/changeGUI') {\n      setGUIState('updated');\n    }\n  };\n  return (\n    <>\n        <DirectoryViewer command={guiState} />\n        <TermPage\n        term={term}\n        element={element}\n        onTerminalInput={handleTerminalInput}/>\n    </>\n  );\n};\n\nexport default MainComponent;\n\n\nconst TermPage = ({ term, element, onTerminalInput }) => {\n  const [terminal, setTerminal] = useState(null);\n\n  useEffect(() => {\n    if (!terminal && element) {\n      try {\n        const newTerminal = term;\n        newTerminal.onData((data) => {\n          onTerminalInput(data);\n        });\n        newTerminal.open(element);\n        setTerminal(newTerminal);\n\n        const sockets = new SocketResult();\n        let currentInput = \"\";\n        let currentPath = \"/home/user\";\n\n        newTerminal.write(\"Welcome to NetRunner!\\r\\n\");\n        prompt(newTerminal, currentPath);\n\n        newTerminal.onKey(({ key, domEvent }) => {\n          const char = key;\n          if (domEvent.keyCode === 13) {\n            // Enter key\n            const message = currentInput;\n            newTerminal.writeln(\"\");\n            sockets.sendMessage(message, currentPath);\n            prompt(newTerminal, currentPath);\n            sockets.getMessage((chat) => {\n              newTerminal.write(chat);\n              newTerminal.writeln(\"\");\n              prompt(newTerminal, currentPath);\n            });\n            currentInput = \"\";\n          } else if (domEvent.keyCode === 8) {\n            // Backspace 처리\n            if (currentInput.length > 0) {\n              newTerminal.write(\"\\b \\b\"); // 터미널에서 문자를 제거\n              currentInput = currentInput.slice(0, -1);\n            }\n          } else {\n            currentInput += char;\n            newTerminal.write(char);\n          }\n        });\n\n        return () => {\n          newTerminal.dispose();\n        };\n      } catch (error) {\n        console.error(\"Error initializing terminal:\", error);\n      }\n    }\n  }, [term, element, onTerminalInput, terminal]);\n\n  return <div id=\"terminal\"  style={{ width: \"100%\", height: \"100%\" }} />;\n};\n\nfunction prompt(terminal, location) {\n  if (location === \"/root\") {\n    location = \"~\";\n  }\n  terminal.write(`root@root[${location}]$`);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjD;AACA,OAAOC,eAAe,MAAM,cAAc;AAC1C,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAO,4BAA4B;AACnC,SAASC,YAAY,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMc,IAAI,GAAG,IAAIZ,QAAQ,CAAC,CAAC;EAC3B,MAAMa,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;EAEnD,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/BR,eAAe,CAAES,QAAQ,IAAM,GAAEA,QAAS,KAAID,IAAK,EAAC,CAAC;EACvD,CAAC;EAED,MAAME,mBAAmB,GAAIC,KAAK,IAAK;IACrC;IACA,IAAIA,KAAK,KAAK,YAAY,EAAE;MAC1BT,WAAW,CAAC,SAAS,CAAC;IACxB;EACF,CAAC;EACD,oBACER,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA,CAACJ,eAAe;MAACuB,OAAO,EAAEZ;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCvB,OAAA,CAACwB,QAAQ;MACTf,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBe,eAAe,EAAET;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACzC,CAAC;AAEP,CAAC;AAACnB,EAAA,CAzBID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA2BnB,eAAeA,aAAa;AAG5B,MAAMqB,QAAQ,GAAGA,CAAC;EAAEf,IAAI;EAAEC,OAAO;EAAEe;AAAgB,CAAC,KAAK;EAAAE,GAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACkC,QAAQ,IAAIlB,OAAO,EAAE;MACxB,IAAI;QACF,MAAMoB,WAAW,GAAGrB,IAAI;QACxBqB,WAAW,CAACC,MAAM,CAAEC,IAAI,IAAK;UAC3BP,eAAe,CAACO,IAAI,CAAC;QACvB,CAAC,CAAC;QACFF,WAAW,CAACG,IAAI,CAACvB,OAAO,CAAC;QACzBmB,WAAW,CAACC,WAAW,CAAC;QAExB,MAAMI,OAAO,GAAG,IAAIpC,YAAY,CAAC,CAAC;QAClC,IAAIqC,YAAY,GAAG,EAAE;QACrB,IAAIC,WAAW,GAAG,YAAY;QAE9BN,WAAW,CAACO,KAAK,CAAC,2BAA2B,CAAC;QAC9CC,MAAM,CAACR,WAAW,EAAEM,WAAW,CAAC;QAEhCN,WAAW,CAACS,KAAK,CAAC,CAAC;UAAEC,GAAG;UAAEC;QAAS,CAAC,KAAK;UACvC,MAAMC,IAAI,GAAGF,GAAG;UAChB,IAAIC,QAAQ,CAACE,OAAO,KAAK,EAAE,EAAE;YAC3B;YACA,MAAMC,OAAO,GAAGT,YAAY;YAC5BL,WAAW,CAACe,OAAO,CAAC,EAAE,CAAC;YACvBX,OAAO,CAACY,WAAW,CAACF,OAAO,EAAER,WAAW,CAAC;YACzCE,MAAM,CAACR,WAAW,EAAEM,WAAW,CAAC;YAChCF,OAAO,CAACa,UAAU,CAAEC,IAAI,IAAK;cAC3BlB,WAAW,CAACO,KAAK,CAACW,IAAI,CAAC;cACvBlB,WAAW,CAACe,OAAO,CAAC,EAAE,CAAC;cACvBP,MAAM,CAACR,WAAW,EAAEM,WAAW,CAAC;YAClC,CAAC,CAAC;YACFD,YAAY,GAAG,EAAE;UACnB,CAAC,MAAM,IAAIM,QAAQ,CAACE,OAAO,KAAK,CAAC,EAAE;YACjC;YACA,IAAIR,YAAY,CAACc,MAAM,GAAG,CAAC,EAAE;cAC3BnB,WAAW,CAACO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;cAC5BF,YAAY,GAAGA,YAAY,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C;UACF,CAAC,MAAM;YACLf,YAAY,IAAIO,IAAI;YACpBZ,WAAW,CAACO,KAAK,CAACK,IAAI,CAAC;UACzB;QACF,CAAC,CAAC;QAEF,OAAO,MAAM;UACXZ,WAAW,CAACqB,OAAO,CAAC,CAAC;QACvB,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EACF,CAAC,EAAE,CAAC3C,IAAI,EAAEC,OAAO,EAAEe,eAAe,EAAEG,QAAQ,CAAC,CAAC;EAE9C,oBAAO5B,OAAA;IAAKsD,EAAE,EAAC,UAAU;IAAEC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAArC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE,CAAC;AAACI,GAAA,CAxDIH,QAAQ;AAAAkC,GAAA,GAARlC,QAAQ;AA0Dd,SAASc,MAAMA,CAACV,QAAQ,EAAE+B,QAAQ,EAAE;EAClC,IAAIA,QAAQ,KAAK,OAAO,EAAE;IACxBA,QAAQ,GAAG,GAAG;EAChB;EACA/B,QAAQ,CAACS,KAAK,CAAE,aAAYsB,QAAS,IAAG,CAAC;AAC3C;AAAC,IAAAjC,EAAA,EAAAgC,GAAA;AAAAE,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}