{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFolder,\n        size: \"3x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this);\n    case 'file':\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"3x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFile,\n        size: \"3x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n  }\n}\nconst DirectoryViewer = ({\n  initialPath\n}) => {\n  _s();\n  const [path, setPath] = useState(initialPath);\n  const [contents, setContents] = useState(null);\n  useEffect(() => {\n    // 백엔드 연동 로직은 여기에 구현\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1', 'file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory', 'file', 'file', 'directory', 'file', 'file', 'directory', 'file', 'file', 'directory']\n    };\n    setContents(exampleData);\n  }, [path]);\n\n  //이벤트 핸들러\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n      console.log(path);\n    } else {\n      console.log(item + ' file clicked');\n    }\n  }\n  if (!contents) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 스타일 정의\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n    gap: '20px',\n    textAlign: 'center',\n    flexGrow: '1'\n    // overflowY : 'scroll'\n  };\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const pathBar = {\n    position: 'absolute',\n    /* 절대적 위치 설정 */\n    bottom: 0,\n    /* 바닥에서 0px의 위치 */\n    textAlign: 'left',\n    /* 텍스트 중앙 정렬 */\n    backgroundColor: '#c5e3df9d' /* 배경색 설정 */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: pathBar,\n      children: path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRight: 'black solid 1px'\n      },\n      children: \"sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: contents.files.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: itemStyle,\n        onClick: () => handleItemClick(item, contents.filestype[index]),\n        children: [getIconForType(contents.filestype[index]), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(DirectoryViewer, \"ssR5dTsbFJOVu6xJEJcuIH7bbNM=\");\n_c = DirectoryViewer;\nexport default DirectoryViewer;\nvar _c;\n$RefreshReg$(_c, \"DirectoryViewer\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faFolder","faFile","jsxDEV","_jsxDEV","getIconForType","type","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","DirectoryViewer","initialPath","_s","path","setPath","contents","setContents","exampleData","files","filestype","handleItemClick","item","newPath","console","log","children","gridStyle","display","gridTemplateColumns","gap","textAlign","flexGrow","itemStyle","cursor","flexDirection","alignItems","pathBar","position","bottom","backgroundColor","style","borderRight","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/fileSystem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\n\nfunction getIconForType(type) {\n  switch (type) {\n    case 'directory':\n      return <FontAwesomeIcon icon={faFolder} size=\"3x\" />;\n    case 'file':\n      return <FontAwesomeIcon icon={faFile} size=\"3x\" />;\n    default:\n      return <FontAwesomeIcon icon={faFile} size=\"3x\" />;\n  }\n}\n\nconst DirectoryViewer = ({ initialPath }) => {\n  const [path, setPath] = useState(initialPath);\n  const [contents, setContents] = useState(null);\n\n  useEffect(() => {\n    // 백엔드 연동 로직은 여기에 구현\n    const exampleData = {\n      files: ['file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1','file1.txt', 'file2.txt', 'directory1'],\n      filestype: ['file', 'file', 'directory','file', 'file', 'directory','file', 'file', 'directory','file', 'file', 'directory']\n    };\n    setContents(exampleData);\n  }, [path]);\n\n\n  //이벤트 핸들러\n  function handleItemClick(item, type) {\n    if (type === 'directory') {\n      const newPath = path === '/' ? `/${item}` : `${path}/${item}`;\n      setPath(newPath);\n      console.log(path);\n    } else {\n      console.log(item + ' file clicked');\n    }\n  }\n\n  if (!contents) {\n    return <div>Loading...</div>;\n  }\n\n  // 스타일 정의\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n    gap: '20px',\n    textAlign: 'center',\n    flexGrow:'1',\n    // overflowY : 'scroll'\n  };\n\n  const itemStyle = {\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  const pathBar = {\n    position: 'absolute', /* 절대적 위치 설정 */\n            bottom: 0, /* 바닥에서 0px의 위치 */\n            textAlign: 'left', /* 텍스트 중앙 정렬 */\n            backgroundColor: '#c5e3df9d'/* 배경색 설정 */\n  }\n\n  return (\n    <div style={{position: 'relative',display:'flex'}}>\n      <p style={pathBar}>{path}</p>\n      <div style={{borderRight:'black solid 1px'}}>\n        sidebar\n      </div>\n      <div style={gridStyle}>\n        {contents.files.map((item, index) => (\n          <div key={index} style={itemStyle} onClick={() => handleItemClick(item, contents.filestype[index])}>\n            {getIconForType(contents.filestype[index])}\n            <div>{item}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DirectoryViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}