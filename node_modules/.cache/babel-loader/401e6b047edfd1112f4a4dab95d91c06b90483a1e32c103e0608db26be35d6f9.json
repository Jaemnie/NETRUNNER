{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nfunction Termi(terminal2, elements) {\n  _s();\n  const token = localStorage.getItem('accessToken');\n  const socket = io('http://localhost:4000/term', {\n    query: {\n      token\n    }\n  }); // NestJS 서버 주소\n\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n\n  // useEffect(() => {\n  //   socket.on('message', (payload) => {\n  //     setChat([...chat, payload]);\n  //   });\n  // }, [chat]);\n\n  // const sendMessage = () => {\n  //   socket.emit('message', message);\n  //   setMessage('');\n  // };\n\n  const terminal = terminal2;\n  terminal.open(elements);\n  let currentInput = '';\n  terminal.write('Welcome to NetRunner!\\r\\n');\n  let currentPath = '/home/user';\n  prompt('', currentPath);\n  terminal.onKey(({\n    key,\n    domEvent\n  }) => {\n    const char = key;\n    if (domEvent.keyCode === 13) {\n      // Enter key\n      terminal.writeln('');\n      setMessage(currentInput);\n      // sendMessage();\n      terminal.write(chat);\n      currentInput = '';\n      prompt('', currentPath);\n    } else if (domEvent.keyCode === 8) {\n      // Backspace 처리\n      if (currentInput.length > 0) {\n        terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n        currentInput = currentInput.slice(0, -1);\n      }\n    } else {\n      currentInput += char;\n      terminal.write(char);\n    }\n  });\n  function prompt(ip, location) {\n    if (location == \"/root\") {\n      location = '~';\n    }\n    terminal.write(`${ip}root@root[${location}]$`);\n  }\n}\n_s(Termi, \"+uaI6MFTr11lxLnYd50z3kcTqJk=\");\n_c = Termi;\nexport { Termi };\nvar _c;\n$RefreshReg$(_c, \"Termi\");","map":{"version":3,"names":["useState","useEffect","io","Termi","terminal2","elements","_s","token","localStorage","getItem","socket","query","message","setMessage","chat","setChat","terminal","open","currentInput","write","currentPath","prompt","onKey","key","domEvent","char","keyCode","writeln","length","slice","ip","location","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/NETRUNNER/src/components/termsocket.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n\nfunction Termi(terminal2,elements) {\n\n    const token = localStorage.getItem('accessToken');\n    const socket = io('http://localhost:4000/term',{\n        query: { token }\n    }); // NestJS 서버 주소\n\n    const [message, setMessage] = useState('');\n    const [chat, setChat] = useState([]);\n  \n    // useEffect(() => {\n    //   socket.on('message', (payload) => {\n    //     setChat([...chat, payload]);\n    //   });\n    // }, [chat]);\n  \n    // const sendMessage = () => {\n    //   socket.emit('message', message);\n    //   setMessage('');\n    // };\n\n    const terminal = terminal2;\n    terminal.open(elements);\n    let currentInput = '';\n    terminal.write('Welcome to NetRunner!\\r\\n');\n    let currentPath = '/home/user';\n    prompt('',currentPath);\n    terminal.onKey(({ key, domEvent }) => {\n        const char = key;\n        if (domEvent.keyCode === 13) {  // Enter key\n            terminal.writeln('');\n\n            setMessage(currentInput);\n            // sendMessage();\n            terminal.write(chat);\n            \n            currentInput = '';\n            prompt('',currentPath);\n        } else if (domEvent.keyCode === 8) {\n            // Backspace 처리\n            if (currentInput.length > 0) {\n                terminal.write('\\b \\b'); // 터미널에서 문자를 제거\n                currentInput = currentInput.slice(0, -1);\n            }\n        } else {\n            currentInput += char;\n            terminal.write(char);\n        }\n    });\n    function prompt(ip, location) {\n        if (location == \"/root\") {\n            location = '~';\n        }\n        terminal.write(`${ip}root@root[${location}]$`);\n    }\n}\n\nexport { Termi };\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,EAAE,MAAM,kBAAkB;AAGjC,SAASC,KAAKA,CAACC,SAAS,EAACC,QAAQ,EAAE;EAAAC,EAAA;EAE/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,MAAMC,MAAM,GAAGR,EAAE,CAAC,4BAA4B,EAAC;IAC3CS,KAAK,EAAE;MAAEJ;IAAM;EACnB,CAAC,CAAC,CAAC,CAAC;;EAEJ,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMgB,QAAQ,GAAGZ,SAAS;EAC1BY,QAAQ,CAACC,IAAI,CAACZ,QAAQ,CAAC;EACvB,IAAIa,YAAY,GAAG,EAAE;EACrBF,QAAQ,CAACG,KAAK,CAAC,2BAA2B,CAAC;EAC3C,IAAIC,WAAW,GAAG,YAAY;EAC9BC,MAAM,CAAC,EAAE,EAACD,WAAW,CAAC;EACtBJ,QAAQ,CAACM,KAAK,CAAC,CAAC;IAAEC,GAAG;IAAEC;EAAS,CAAC,KAAK;IAClC,MAAMC,IAAI,GAAGF,GAAG;IAChB,IAAIC,QAAQ,CAACE,OAAO,KAAK,EAAE,EAAE;MAAG;MAC5BV,QAAQ,CAACW,OAAO,CAAC,EAAE,CAAC;MAEpBd,UAAU,CAACK,YAAY,CAAC;MACxB;MACAF,QAAQ,CAACG,KAAK,CAACL,IAAI,CAAC;MAEpBI,YAAY,GAAG,EAAE;MACjBG,MAAM,CAAC,EAAE,EAACD,WAAW,CAAC;IAC1B,CAAC,MAAM,IAAII,QAAQ,CAACE,OAAO,KAAK,CAAC,EAAE;MAC/B;MACA,IAAIR,YAAY,CAACU,MAAM,GAAG,CAAC,EAAE;QACzBZ,QAAQ,CAACG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACzBD,YAAY,GAAGA,YAAY,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5C;IACJ,CAAC,MAAM;MACHX,YAAY,IAAIO,IAAI;MACpBT,QAAQ,CAACG,KAAK,CAACM,IAAI,CAAC;IACxB;EACJ,CAAC,CAAC;EACF,SAASJ,MAAMA,CAACS,EAAE,EAAEC,QAAQ,EAAE;IAC1B,IAAIA,QAAQ,IAAI,OAAO,EAAE;MACrBA,QAAQ,GAAG,GAAG;IAClB;IACAf,QAAQ,CAACG,KAAK,CAAE,GAAEW,EAAG,aAAYC,QAAS,IAAG,CAAC;EAClD;AACJ;AAACzB,EAAA,CAvDQH,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAyDd,SAASA,KAAK;AAAG,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}