{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-aseob/Desktop/ReactRunner/netrunner/src/pages/loginPages/modals/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from '../login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  setModalOpen,\n  id,\n  title,\n  content,\n  writer\n}) {\n  _s();\n  // 모달 끄기 \n  // 모달 끄기 (X버튼 onClick 이벤트 핸들러)\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  // 모달 외부 클릭시 끄기 처리\n  // Modal 창을 useRef로 취득\n  const modalRef = useRef < HTMLDivElement > null;\n  useEffect(() => {\n    // 이벤트 핸들러 함수\n    const handler = () => {\n      // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setModalOpen(false);\n      }\n    };\n\n    // 이벤트 핸들러 등록\n    document.addEventListener('mousedown', handler);\n    // document.addEventListener('touchstart', handler); // 모바일 대응\n\n    return () => {\n      // 이벤트 핸들러 해제\n      document.removeEventListener('mousedown', handler);\n      // document.removeEventListener('touchstart', handler); // 모바일 대응\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modal,\n    id: \"passwordResetModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal_content,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.close,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"passwordResetForm\",\n        onSubmit: \"return validatePasswordResetForm(event)\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputBx,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"\\uC778\\uC99D\",\n            id: \"verifyEmailButton\",\n            onClick: \"requestEmailVerification()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputBx,\n          id: \"verificationCodeBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"verificationCode\",\n            placeholder: \"\\uC778\\uC99D\\uBC88\\uD638\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"\\uC778\\uC99D\\uBC88\\uD638 \\uD655\\uC778\",\n            id: \"checkVerificationCodeButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputBx,\n          id: \"newPasswordBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"newPassword\",\n            placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmNewPassword\",\n            placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\",\n            id: \"resetPasswordButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useRef","useParams","useNavigate","styles","jsxDEV","_jsxDEV","Modal","setModalOpen","id","title","content","writer","_s","closeModal","modalRef","HTMLDivElement","handler","current","contains","event","target","document","addEventListener","removeEventListener","className","modal","children","modal_content","close","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","inputBx","type","name","placeholder","required","value","onClick","_c","$RefreshReg$"],"sources":["/Users/jeon-aseob/Desktop/ReactRunner/netrunner/src/pages/loginPages/modals/Modal.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from '../login.module.css';\n\n\n\n\nfunction Modal({ setModalOpen, id, title, content, writer }) {\n    // 모달 끄기 \n    // 모달 끄기 (X버튼 onClick 이벤트 핸들러)\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    // 모달 외부 클릭시 끄기 처리\n    // Modal 창을 useRef로 취득\n    const modalRef = useRef < HTMLDivElement > (null);\n\n    useEffect(() => {\n        // 이벤트 핸들러 함수\n        const handler = () => {\n            // mousedown 이벤트가 발생한 영역이 모달창이 아닐 때, 모달창 제거 처리\n            if (modalRef.current && !modalRef.current.contains(event.target)) {\n                setModalOpen(false);\n            }\n        };\n\n        // 이벤트 핸들러 등록\n        document.addEventListener('mousedown', handler);\n        // document.addEventListener('touchstart', handler); // 모바일 대응\n\n        return () => {\n            // 이벤트 핸들러 해제\n            document.removeEventListener('mousedown', handler);\n            // document.removeEventListener('touchstart', handler); // 모바일 대응\n        };\n    });\n\n    return (\n        <div className={styles.modal} id=\"passwordResetModal\">\n            <div className={styles.modal_content}>\n                <span className={styles.close}>&times;</span>\n                <h2>비밀번호 찾기</h2>\n                <form id=\"passwordResetForm\" onSubmit=\"return validatePasswordResetForm(event)\">\n                    <div className={styles.inputBx}>\n                        <input type=\"email\" name=\"email\" placeholder=\"이메일\" required />\n                        <input type=\"button\" value=\"인증\" id=\"verifyEmailButton\" onClick=\"requestEmailVerification()\" />\n                    </div>\n                    <div className={styles.inputBx} id=\"verificationCodeBox\" >\n                        <input type=\"text\" name=\"verificationCode\" placeholder=\"인증번호\" required />\n                        <input type=\"button\" value=\"인증번호 확인\" id=\"checkVerificationCodeButton\" />\n                    </div>\n                    <div className={styles.inputBx} id=\"newPasswordBox\">\n                        <input type=\"password\" name=\"newPassword\" placeholder=\"새 비밀번호\" required />\n                        <input type=\"password\" name=\"confirmNewPassword\" placeholder=\"새 비밀번호 확인\" required />\n                        <input type=\"submit\" value=\"비밀번호 재설정\" id=\"resetPasswordButton\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}